import{_ as n,o as s,c as a,a as t}from"./app-6325e707.js";const e={},l=t(`<h3 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> Ajax</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>Ajax 的全称是 Asynchronous JavaScript And XML (异步Javascript和XML)
它不是一项新的技术而是由多种技术组合而成,是一种异步请求方式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xmlhttprequest对象" tabindex="-1"><a class="header-anchor" href="#xmlhttprequest对象" aria-hidden="true">#</a> XMLHttpRequest对象</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>XMLHttpRequest对象是整个Ajax开发的基础<span class="token punctuation">,</span>它提供了客户端和服务器端进行异步通信的能力
一方面它向服务器提交一个请求，获取指定页面的内容，另一方面将指定的数据提交到服务器
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ajax请求过程" tabindex="-1"><a class="header-anchor" href="#ajax请求过程" aria-hidden="true">#</a> Ajax请求过程</h3><blockquote><p>open(method, url, asynchronous, user, password);</p></blockquote><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Method</td><td style="text-align:left;">指定请求类型,一般为get或者post</td></tr><tr><td style="text-align:left;">url</td><td style="text-align:left;">指定请求的地址,可以是绝对地址或者相对地址,可以附带查询字符串</td></tr><tr><td style="text-align:left;">Asynchronous</td><td style="text-align:left;">(可选)表示请求是同步还是异步,同步请求为false, 异步为true,默认为true</td></tr><tr><td style="text-align:left;">User</td><td style="text-align:left;">(可选)指定请求的用户名</td></tr><tr><td style="text-align:left;">Password</td><td style="text-align:left;">(可选) 指定请求密码</td></tr></tbody></table><blockquote><p>send(content)</p></blockquote><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">content</td><td style="text-align:left;">它表示要向服务器发送的数据,其格式为查询字符串形式;如果不发送任何参数可以使用<code>null</code></td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建异步对象</span>
<span class="token keyword">var</span> ajax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//get请求</span>
ajax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;http://demo.com/test.php?id=1&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
ajax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    
<span class="token comment">//post请求 需要设置头信息</span>
ajax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;http://demo.com/test.php?id=1&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
ajax<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span>
ajax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;username=demo&amp;sex=boy&amp;age=30&quot;</span><span class="token punctuation">)</span>

<span class="token comment">//绑定异步请求状态变化事件</span>
ajax<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// readyState的值表示当前请求的状态</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ajax<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// status存储服务器端返回的HTTP请求响应代码,它表⽰请求的处理结果</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ajax<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//请求成功，接收服务器返回结果</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ajax<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//⽹络失败或服务器错误</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;请求失败&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>readyState状态</p></blockquote><table><thead><tr><th style="text-align:left;">结果</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;">表示对象已建立，但还未初始化，尚未调用open方法</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">表示open方法已调用，尚未调用send方法</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">表示send方法已调用，其他数据未知</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">表示请求已发送，正在接受数据</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">表示数据已接收成功</td></tr></tbody></table><blockquote><p>status状态</p></blockquote><table><thead><tr><th style="text-align:left;">结果</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">200</td><td style="text-align:left;">请求成功</td></tr><tr><td style="text-align:left;">202</td><td style="text-align:left;">请求被接收，但处理未完成</td></tr><tr><td style="text-align:left;">400</td><td style="text-align:left;">错误的请求</td></tr><tr><td style="text-align:left;">404</td><td style="text-align:left;">请求资源未找到</td></tr><tr><td style="text-align:left;">500</td><td style="text-align:left;">服务器内部错误</td></tr></tbody></table><h3 id="jqueryajax" tabindex="-1"><a class="header-anchor" href="#jqueryajax" aria-hidden="true">#</a> JqueryAjax</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">async</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//默认为true，代表异步请求</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//以post方式发送请求</span>
  <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&quot;login.php&quot;</span><span class="token punctuation">,</span> <span class="token comment">//请求的地址</span>
  <span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span><span class="token comment">//服务器端返回json的数据格式</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">&quot;username=demo&amp;password=123456&quot;</span><span class="token punctuation">,</span> <span class="token comment">//发送的数据</span>
  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span> 
  	<span class="token comment">//请求成功的回调函数</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
  	<span class="token comment">//请求失败的回调函数</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),p=[l];function o(c,i){return s(),a("div",null,p)}const d=n(e,[["render",o],["__file","02.html.vue"]]);export{d as default};
