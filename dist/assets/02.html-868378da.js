import{_ as n,o as s,c as a,a as e}from"./app-47c2ac71.js";const p={},t=e(`<h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>算术运算符
赋值运算符
字符串运算符
递增<span class="token punctuation">(</span><span class="token operator">++</span><span class="token punctuation">)</span>和递减<span class="token punctuation">(</span><span class="token operator">--</span><span class="token punctuation">)</span>运算符
逻辑运算符
比较运算符
三元运算符
<span class="token constant">NULL</span>合并运算符
组合比较符
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="算数运算符" tabindex="-1"><a class="header-anchor" href="#算数运算符" aria-hidden="true">#</a> 算数运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">*</span> 加法运算      <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span>
 
<span class="token operator">+</span> 减法运算      <span class="token variable">$a</span> <span class="token operator">-</span> <span class="token variable">$b</span>
 
<span class="token operator">-</span> 乘法运算      <span class="token variable">$a</span> <span class="token operator">*</span> <span class="token variable">$b</span>
 
<span class="token operator">/</span> 除法运算      <span class="token variable">$a</span> <span class="token operator">/</span> <span class="token variable">$b</span>
 
<span class="token operator">%</span> 取模运算（求余数<span class="token punctuation">)</span>   <span class="token variable">$a</span> <span class="token operator">%</span> <span class="token variable">$b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a> 赋值运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">5</span>    赋值
<span class="token variable">$a</span> <span class="token operator">+=</span> <span class="token number">5</span>   加法赋值    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token number">5</span>
<span class="token variable">$a</span> <span class="token operator">-=</span> <span class="token number">5</span>   减法赋值    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span> – <span class="token number">5</span>
<span class="token variable">$a</span> <span class="token operator">*=</span> <span class="token number">5</span>   乘法赋值    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">*</span> <span class="token number">5</span>
<span class="token variable">$a</span> <span class="token operator">/=</span> <span class="token number">5</span>   除法赋值    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">/</span> <span class="token number">5</span>
<span class="token variable">$a</span> <span class="token operator">.=</span> <span class="token number">5</span>   拼接赋值    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token number">.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串运算符" tabindex="-1"><a class="header-anchor" href="#字符串运算符" aria-hidden="true">#</a> 字符串运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>字符串运算符用于拼接字符串<span class="token punctuation">,</span> 拼接表示将两个或多个对象组合起来<span class="token punctuation">;</span>

<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;world&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
 
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;World!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="递增递减运算符" tabindex="-1"><a class="header-anchor" href="#递增递减运算符" aria-hidden="true">#</a> 递增递减运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>递增和递减运算符将变量的当前值加<span class="token number">1</span>或减<span class="token number">1</span>，可以使代码更简洁<span class="token punctuation">;</span>
 
<span class="token operator">++</span><span class="token variable">$i</span>    先加  <span class="token variable">$i</span>的值加<span class="token number">1</span>，然后再返回<span class="token variable">$i</span>的值<span class="token punctuation">;</span>

<span class="token variable">$i</span><span class="token operator">++</span>    后加  先返回<span class="token variable">$i</span>的值，然后再将<span class="token variable">$i</span>的值加<span class="token number">1</span><span class="token punctuation">;</span>

<span class="token operator">--</span><span class="token variable">$i</span>    先减  <span class="token variable">$i</span>的值减<span class="token number">1</span>，然后再返回<span class="token variable">$i</span>的值<span class="token punctuation">;</span>

<span class="token variable">$i</span><span class="token operator">--</span>    后减  先返回<span class="token variable">$i</span>的值，然后再将<span class="token variable">$i</span>的值减<span class="token number">1</span><span class="token punctuation">;</span>

<span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;i = &#39;</span><span class="token operator">.</span><span class="token variable">$i</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;a = &#39;</span><span class="token operator">.</span><span class="token variable">$a</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>利用逻辑运算符可以根据多个变量的值进行判断，这使得控制程序的流程成为可能<span class="token operator">.</span>
逻辑操作符常用于控制结构中，如<span class="token keyword">if</span>条件和<span class="token keyword">while</span>及<span class="token keyword">for</span>循环<span class="token punctuation">;</span>
<span class="token operator">&amp;&amp;</span>，  <span class="token keyword">AND</span>   逻辑与  
<span class="token operator">||</span>，  <span class="token keyword">OR</span>    逻辑或
<span class="token operator">!</span><span class="token punctuation">,</span>    <span class="token constant">NOT</span>   逻辑非
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符" aria-hidden="true">#</a> 比较运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>比较运算符，返回一个布尔值 <span class="token constant boolean">TRUE</span> 或 <span class="token constant boolean">FALSE</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span>         大于
<span class="token operator">&lt;</span>         小于
<span class="token operator">&lt;=</span>        大于或等于
<span class="token operator">&lt;=</span>        小于或等于
<span class="token operator">!=</span>        不等于
<span class="token operator">&lt;</span><span class="token operator">&gt;</span>        不等于
<span class="token operator">==</span>        等于
<span class="token operator">===</span>       全等于 （两个比较的内容里，类型也要一样）
<span class="token operator">!==</span>       不全等
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三元运算符" tabindex="-1"><a class="header-anchor" href="#三元运算符" aria-hidden="true">#</a> 三元运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>语法：expression1 <span class="token operator">?</span> expression2 <span class="token punctuation">:</span> <span class="token class-name type-declaration">expression3</span>
 
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">&gt;</span> <span class="token variable">$b</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;yes&quot;</span><span class="token punctuation">:</span><span class="token string double-quoted-string">&quot;no&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$res</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="null合并运算符" tabindex="-1"><a class="header-anchor" href="#null合并运算符" aria-hidden="true">#</a> NULL合并运算符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">NULL</span>合并运算符会判断变量是否存在且值不为<span class="token constant">NULL</span>，如果是它就会返回自身的值，否则返回它的第二个操作数

以前我们这样写三元运算符：
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;未知用户名&#39;</span><span class="token punctuation">;</span>

现在我们可以直接这样写：
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;未知用户名&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组合比较符" tabindex="-1"><a class="header-anchor" href="#组合比较符" aria-hidden="true">#</a> 组合比较符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>组合比较符用于比较两个表达式 <span class="token variable">$a</span> 和 <span class="token variable">$b</span>
如果 <span class="token variable">$a</span> 小于、等于或大于 <span class="token variable">$b</span>时，它分别返回<span class="token operator">-</span><span class="token number">1</span>、<span class="token number">0</span>或<span class="token number">1</span>

<span class="token comment">// 整型比较</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 浮点型比较</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">1.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">1.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">2.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token number">2.5</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 字符串比较</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;a&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;a&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;b&quot;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断语句-if-switch" tabindex="-1"><a class="header-anchor" href="#判断语句-if-switch" aria-hidden="true">#</a> 判断语句（if switch）</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token number">1.</span> <span class="token keyword">If</span> 语句
<span class="token variable">$os</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;windows&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$os</span> <span class="token operator">==</span> <span class="token string double-quoted-string">&quot;windows&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;windows系统&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$os</span> <span class="token operator">==</span> <span class="token string double-quoted-string">&quot;linux&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;linux操作系统&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;其他系统&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token number">2.</span> <span class="token keyword">Switch</span> 语句
<span class="token keyword">switch</span> 语句可以看作是<span class="token keyword">if</span><span class="token operator">-</span><span class="token keyword">else</span>组合的一种变体，一般用于判断单个变量的值
在每个<span class="token keyword">case</span>块的末尾处都有<span class="token keyword">break</span>语句，如果没有<span class="token keyword">break</span>语句，就会执行所有后续的<span class="token keyword">case</span>块直到遇到<span class="token keyword">break</span>语句为止<span class="token punctuation">;</span>
 
<span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$os</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string double-quoted-string">&quot;windows&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;windows系统&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string double-quoted-string">&quot;linux&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;linux操作系统&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;其他系统&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="do-while" tabindex="-1"><a class="header-anchor" href="#do-while" aria-hidden="true">#</a> do{}while()</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">do</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while(){}</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for(){}</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> foreach(){}</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;nickname&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span><span class="token operator">=&gt;</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;sex&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;男&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$list</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=&gt;</span><span class="token variable">$item</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;索引名称：&quot;</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;---值为：&quot;</span><span class="token operator">.</span><span class="token variable">$item</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="break立即停止循环" tabindex="-1"><a class="header-anchor" href="#break立即停止循环" aria-hidden="true">#</a> break立即停止循环</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="continue退出当前一次循环" tabindex="-1"><a class="header-anchor" href="#continue退出当前一次循环" aria-hidden="true">#</a> continue退出当前一次循环</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),o=[t];function l(i,c){return s(),a("div",null,o)}const u=n(p,[["render",l],["__file","02.html.vue"]]);export{u as default};
