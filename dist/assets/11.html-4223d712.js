import{_ as n,o as s,c as a,a as t}from"./app-3e5ace64.js";const e={},p=t(`<h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>正则表达式就是一套专门用于处理文本的工具<span class="token punctuation">,</span>可以对文本进行查找，匹配，替换
常用于验证表单提交的内容，比如验证电话号码，Email邮箱，身份证号码等
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preg-match-正则匹配方法" tabindex="-1"><a class="header-anchor" href="#preg-match-正则匹配方法" aria-hidden="true">#</a> preg_match 正则匹配方法</h3><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">&#39;/hello/&#39;</td><td style="text-align:left;">匹配的正则表达式</td></tr><tr><td style="text-align:left;">&quot;hello world&quot;</td><td style="text-align:left;">匹配的字符串</td></tr><tr><td style="text-align:left;">res</td><td style="text-align:left;">将匹配的结果存放到一个变量里面</td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">//单次匹配</span>
<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/hello/&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//多次匹配</span>
<span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/h/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;hello hello&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preg-replace-正则替换方法" tabindex="-1"><a class="header-anchor" href="#preg-replace-正则替换方法" aria-hidden="true">#</a> preg_replace 正则替换方法</h3><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">&#39;/hello/&#39;</td><td style="text-align:left;">匹配的正则表达式</td></tr><tr><td style="text-align:left;">&quot;aaaa&quot;</td><td style="text-align:left;">替换的内容</td></tr><tr><td style="text-align:left;">&quot;hello world&quot;</td><td style="text-align:left;">匹配的字符串</td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/hello/&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;aaaa&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//aaaa  world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元字符-特殊字符" tabindex="-1"><a class="header-anchor" href="#元字符-特殊字符" aria-hidden="true">#</a> 元字符（特殊字符）</h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> *</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">*</span> 匹配前面的字符零次或多次  等同于 ｛<span class="token number">0</span>，｝  

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/a*/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;bbbbba&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//array(1) { [0]=&gt; string(0) &quot;&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a> +</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">+</span>匹配前面的字符一次或多次  等同于 ｛<span class="token number">1</span>，｝

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/a+/&quot;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;bbbbbbbbbbaa&#39;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">&quot;aa&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-hidden="true">#</a> ?</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">?</span> 匹配前面的字符零次或一次  等同于 ｛<span class="token number">0</span>，<span class="token number">1</span>｝ 

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/a?/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;aaaabbbb&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-3" tabindex="-1"><a class="header-anchor" href="#-3" aria-hidden="true">#</a> {}</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">{</span>m<span class="token punctuation">}</span> m 是一个非负整数。匹配确定的 m 次  
<span class="token punctuation">{</span>m<span class="token punctuation">,</span><span class="token punctuation">}</span> m 是一个非负整数。至少匹配m 次 
<span class="token punctuation">{</span>m<span class="token punctuation">,</span>n<span class="token punctuation">}</span>最少匹配 m次且最多匹配 n次 
<span class="token punctuation">(</span><span class="token punctuation">)</span>表示一个整体
<span class="token operator">.</span>匹配除换行之外的任何一个字符
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-4" tabindex="-1"><a class="header-anchor" href="#-4" aria-hidden="true">#</a> |</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">|</span> 匹配两个或多个选择  

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/(h|a)+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;dfghsssssasfgdsf&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-5" tabindex="-1"><a class="header-anchor" href="#-5" aria-hidden="true">#</a> ^</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">^</span> 匹配字符串的开始位置

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/^hello/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;hello world&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-6" tabindex="-1"><a class="header-anchor" href="#-6" aria-hidden="true">#</a> <code>$</code></h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>$ 匹配字符串结束位置

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/^hello world$/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;hello world&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-7" tabindex="-1"><a class="header-anchor" href="#-7" aria-hidden="true">#</a> []</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">[</span><span class="token punctuation">]</span> 匹配方括号中的任一字符

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/[abcdf]/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;aaaa -  bbbb - aaac&quot;</span><span class="token punctuation">,</span><span class="token variable">$res_test</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="-8" tabindex="-1"><a class="header-anchor" href="#-8" aria-hidden="true">#</a> [^]</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">[</span><span class="token operator">^</span><span class="token punctuation">]</span>匹配除方括号中的字符外的任何字符    

<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/[^abcdf]/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asd&quot;</span><span class="token punctuation">,</span><span class="token variable">$res_test</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配包含某个范围的字符" tabindex="-1"><a class="header-anchor" href="#匹配包含某个范围的字符" aria-hidden="true">#</a> 匹配包含某个范围的字符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>用<span class="token string double-quoted-string">&quot;[start-end]&quot;</span>匹配包含某个范围的字符

<span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span> 匹配所有的小写字母
<span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span> 匹配所有的大写字母
<span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span>  匹配所有的字母
<span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span> 匹配所有的数字
<span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>\\<span class="token operator">.</span>\\<span class="token operator">-</span><span class="token punctuation">]</span> 匹配所有的数字，句号和减号   

<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;^[a-z]+$&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预定义元字符" tabindex="-1"><a class="header-anchor" href="#预定义元字符" aria-hidden="true">#</a> 预定义元字符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>由于某些模式会反复用到，所以可以使用以下预定义类<span class="token punctuation">;</span>
\\d    匹配一个数字；等价于<span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>      
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\d+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

\\<span class="token constant">D</span>匹配除数字以外任何一个字符；等价于<span class="token punctuation">[</span><span class="token operator">^</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>  
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\D+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\\w匹配一个英文字母、数字或下划线；等价于<span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z_</span><span class="token punctuation">]</span> 
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\w+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\\<span class="token constant">W</span>匹配除英文字母、数字和下划线以外任何一个字符；等价于<span class="token punctuation">[</span><span class="token operator">^</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z_</span><span class="token punctuation">]</span>  
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\W+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\\s匹配一个空白字符；等价于<span class="token punctuation">[</span>\\f\\n\\r\\t\\v<span class="token punctuation">]</span>      
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\s+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\\<span class="token constant">S</span>匹配除空白字符以外任何一个字符；等价于<span class="token punctuation">[</span><span class="token operator">^</span>\\f\\n\\r\\t\\v<span class="token punctuation">]</span>   
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\S+/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;asdasdasdad  3434&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模式修正符" tabindex="-1"><a class="header-anchor" href="#模式修正符" aria-hidden="true">#</a> 模式修正符</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>i   在和模式进行匹配时不区分大小写                               
      <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/hello/i&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;HELLO WORLD&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

m   将字符串视为多行       
      <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;bcd 
      abc 
      cba&#39;</span><span class="token punctuation">;</span> 
      <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/^abc/m&#39;</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               

s   模式中的圆点元字符 <span class="token string double-quoted-string">&quot; . &quot;</span>将匹配所有的字符，包括换行符        
      <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;adsadsa 
      c&#39;</span><span class="token punctuation">;</span> 
      <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/a.*c/s&#39;</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

x   模式中的空白忽略不计，除非已经转义                          
      <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/^    hello /x&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">U</span>   取消贪婪匹配                                        
      <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;/&lt;b&gt;.*&lt;\\/b&gt;/U&#39;</span><span class="token punctuation">;</span> 
      <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;b&gt;hello&lt;/b&gt; &lt;b&gt;world&lt;/b&gt; &lt;b&gt;php&lt;/b&gt;&#39;</span><span class="token punctuation">;</span> 
      <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),o=[p];function l(i,c){return s(),a("div",null,o)}const r=n(e,[["render",l],["__file","11.html.vue"]]);export{r as default};
