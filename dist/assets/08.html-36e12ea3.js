import{_ as t,r as n,o as r,c as o,b as a,d as e,e as s,a as i}from"./app-d50584af.js";const c={},l=i(`<h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h3><h1 id="使用mongo命令行删除数据" tabindex="-1"><a class="header-anchor" href="#使用mongo命令行删除数据" aria-hidden="true">#</a> 使用mongo命令行删除数据</h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>使用<code>remove()</code>方法从集合中删除文档。这个方法需要一个条件文档用来决定哪些文档将被删除。</p><h2 id="删除匹配的所有文档" tabindex="-1"><a class="header-anchor" href="#删除匹配的所有文档" aria-hidden="true">#</a> 删除匹配的所有文档</h2><p>下面的操作将删除指定条件匹配的所有文件:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.restaurants.remove( { &quot;borough&quot;: &quot;Manhattan&quot; } )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除操作返回一个<code>WriteResult</code>对象，它包含了操作的状态信息。<code>nRemoved</code>字段值表示被删除的文档数量。</p><h2 id="使用justone可选参数" tabindex="-1"><a class="header-anchor" href="#使用justone可选参数" aria-hidden="true">#</a> 使用justOne可选参数</h2><p>默认地，<code>remove()</code>方法将删除匹配指定条件的所有文档。使用justOne可选参数可以限制删除操作只删除一条。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.restaurants.remove( { &quot;borough&quot;: &quot;Queens&quot; }, { justOne: true } )

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>操作成功将返回如下的<code>WriteResult</code>对象。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>WriteResult({ &quot;nRemoved&quot; : 1 })
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>nRemoved</code>字段值表示删除的文档数量。</p><h2 id="删除所有文档" tabindex="-1"><a class="header-anchor" href="#删除所有文档" aria-hidden="true">#</a> 删除所有文档</h2><p>删除一个集合中的所有文档，传递一个空的条件文档即可。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.restaurants.remove( { } )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="删除一个集合" tabindex="-1"><a class="header-anchor" href="#删除一个集合" aria-hidden="true">#</a> 删除一个集合</h2><p>删除所有的操作仅仅是删除集合中的全部文档。集合本身和集合的索引并不会被删除。直接删除集合包括索引，也许比删除一个集合中的所有文档更高效。需要的时候重新创建集合并构建索引。使用<code>drop()</code>方法删除一个集合，包括所有索引。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.restaurants.drop()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除集合如果成功，此操作将返回true。如果被删除的集合不存在，将返回false。</p>`,21),u={href:"http://docs.mongodb.org/manual/core/write-operations-atomicity/",target:"_blank",rel:"noopener noreferrer"};function h(m,v){const d=n("ExternalLinkIcon");return r(),o("div",null,[l,a("p",null,[e('在MongoDB中，"写"操作是文档级别的原子操作。如果一个删除操作要删除集合中的多个文档，这个操作会和其他写操作交错。具体请参考MongoDB手册中'),a("a",u,[e("Atomicity"),s(d)]),e("。")])])}const x=t(c,[["render",h],["__file","08.html.vue"]]);export{x as default};
