import{_ as n,o as a,c as s,a as e}from"./app-a58d3f97.js";const t={},p=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在app文件下建立extend文件夹

框架会把app/extend/application.js中定义的对象与 Koa Application 的 prototype 对象进行合并
在应用启动时会基于扩展后的 prototype 生成app对象
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩展application" tabindex="-1"><a class="header-anchor" href="#扩展application" aria-hidden="true">#</a> 扩展Application</h3><blockquote><p>app/extend/application.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//在application.js扩展一个方法叫做foo</span>
<span class="token comment">//注意this的指向</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span>  <span class="token string">&#39;在extend中扩展application&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用application扩展" tabindex="-1"><a class="header-anchor" href="#调用application扩展" aria-hidden="true">#</a> 调用Application扩展</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="扩展helper" tabindex="-1"><a class="header-anchor" href="#扩展helper" aria-hidden="true">#</a> 扩展Helper</h3><blockquote><p>app/extend/helper.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">notice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;在extend中扩展helper&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用helper扩展" tabindex="-1"><a class="header-anchor" href="#调用helper扩展" aria-hidden="true">#</a> 调用Helper扩展</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>helper<span class="token punctuation">.</span><span class="token function">notice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),i=[p];function c(o,l){return a(),s("div",null,i)}const d=n(t,[["render",c],["__file","08.html.vue"]]);export{d as default};
