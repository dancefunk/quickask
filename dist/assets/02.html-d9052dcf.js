import{_ as n,p as s,q as a,Y as e}from"./framework-aa5c4115.js";const t={},l=e(`<h3 id="字符集是什么" tabindex="-1"><a class="header-anchor" href="#字符集是什么" aria-hidden="true">#</a> 字符集是什么？</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>为了更好的识别中文、日文、英文、希腊语。对于常用的符号进行了编码，这个编码就是字符集。
字符集确定了文字的存储方式。
字符集相当于是计算机中人类的语言。

举个例子：
我说的是英文，所以我存储的时候要用英文文字来存储。
如果我说的是中文，用英文字符来存储的话。那么人们就看不懂也看不明白，就是我们所说的乱码。
因为字符集太多了，足够有几十种上百种之多。
所以我们不需要了解太多的字符集的知识，甚至不需要了解字符集到底是如何编成人类可见字符的。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符集的重点知识" tabindex="-1"><a class="header-anchor" href="#字符集的重点知识" aria-hidden="true">#</a> 字符集的重点知识</h3><blockquote><ul><li><strong>常用字符集</strong></li><li><strong>数据库中常用字符集</strong></li></ul></blockquote><h2 id="英文字符集" tabindex="-1"><a class="header-anchor" href="#英文字符集" aria-hidden="true">#</a> 英文字符集</h2><table><thead><tr><th style="text-align:left;">字符集</th><th style="text-align:left;">说明</th><th style="text-align:left;">字节长度</th></tr></thead><tbody><tr><td style="text-align:left;">ASCII</td><td style="text-align:left;">美国标准信息交换代码</td><td style="text-align:left;">单字节</td></tr><tr><td style="text-align:left;">GBK</td><td style="text-align:left;">汉字内码扩展规范</td><td style="text-align:left;">双字节</td></tr><tr><td style="text-align:left;">unicode</td><td style="text-align:left;">万国码</td><td style="text-align:left;">4字节</td></tr><tr><td style="text-align:left;">UTF-8</td><td style="text-align:left;">Unicode的可变长度字符编码</td><td style="text-align:left;">1到6个字节</td></tr></tbody></table><h3 id="ascii" tabindex="-1"><a class="header-anchor" href="#ascii" aria-hidden="true">#</a> ASCII</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">ASCII</span> 码使用指定的<span class="token number">7</span> 位或<span class="token number">8</span> 位二进制数组合来表示<span class="token number">128</span> 或<span class="token number">256</span> 种可能的字符。
标准<span class="token constant">ASCII</span> 码也叫基础<span class="token constant">ASCII</span>码，使用<span class="token number">7</span> 位二进制数来表示所有的大写和小写字母，
数字<span class="token number">0</span> 到<span class="token number">9</span>、标点符号， 以及在美式英语中使用的特殊控制字符。
其中：
<span class="token number">0</span>～<span class="token number">31</span>及<span class="token number">127</span><span class="token punctuation">(</span>共<span class="token number">33</span>个<span class="token punctuation">)</span>是控制字符或通信专用字符（其余为可显示字符），
如控制符：<span class="token constant">LF</span>（换行）、<span class="token constant">CR</span>（回车）、<span class="token constant">FF</span>（换页）、<span class="token constant">DEL</span>（删除）、<span class="token constant">BS</span>（退格<span class="token punctuation">)</span>、<span class="token constant">BEL</span>（响铃）等；
通信专用字符：<span class="token constant">SOH</span>（文头）、<span class="token constant">EOT</span>（文尾）、<span class="token constant">ACK</span>（确认）等；
<span class="token constant">ASCII</span>值为<span class="token number">8</span>、<span class="token number">9</span>、<span class="token number">10</span> 和<span class="token number">13</span> 分别转换为退格、制表、换行和回车字符。
它们并没有特定的图形显示，但会依不同的应用程序，而对文本显示有不同的影响。
<span class="token number">32</span>～<span class="token number">126</span><span class="token punctuation">(</span>共<span class="token number">95</span>个<span class="token punctuation">)</span>是字符<span class="token punctuation">(</span><span class="token number">32</span>是空格），其中<span class="token number">48</span>～<span class="token number">57</span>为<span class="token number">0</span>到<span class="token number">9</span>十个阿拉伯数字。
<span class="token number">65</span>～<span class="token number">90</span>为<span class="token number">26</span>个大写英文字母，<span class="token number">97</span>～<span class="token number">122</span>号为<span class="token number">26</span>个小写英文字母，其余为一些标点符号、运算符号等。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gbk" tabindex="-1"><a class="header-anchor" href="#gbk" aria-hidden="true">#</a> GBK</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">GBK</span> 向下与 <span class="token constant">GB</span> <span class="token number">2312</span> 编码兼容。是中华人民共和国定义的汉字计算机编码规范。早期版本为<span class="token constant">GB2312</span>。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="unicode" tabindex="-1"><a class="header-anchor" href="#unicode" aria-hidden="true">#</a> Unicode</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>Unicode（统一码、万国码、单一码）Unicode是国际组织制定的可以容纳世界上所有文字和符号的字符编码方案。
以满足跨语言、跨平台进行文本转换、处理的要求。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="utf-8" tabindex="-1"><a class="header-anchor" href="#utf-8" aria-hidden="true">#</a> UTF-8</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>是一种针对Unicode的可变长度字符编码，也是万国码。
因为<span class="token constant">UNICODE</span>比<span class="token constant">ASCII</span>占用大一倍的空间，而对<span class="token constant">ASCII</span>来说高字节的<span class="token number">0</span>对他毫无用处。
为了解决这个问题，就出现了一些中间格式的字符集，他们被称为通用转换格式，
即<span class="token constant">UTF</span>（Universal Transformation Format）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库中常用字符集" tabindex="-1"><a class="header-anchor" href="#数据库中常用字符集" aria-hidden="true">#</a> 数据库中常用字符集</h2><p>在中文中常用的字符集分为utf-8和GBK</p><table><thead><tr><th style="text-align:left;">字符集</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">gbk_chinese_ci</td><td style="text-align:left;">简体中文, 不区分大小写</td></tr><tr><td style="text-align:left;">utf8_general_ci</td><td style="text-align:left;">Unicode (多语言), 不区分大小写</td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>MySQL字符集由三个部分组成：
<span class="token number">1.</span>字符集
<span class="token number">2.</span>语言
<span class="token number">3.</span>类型

最后的bin是指二进制字符集，后面的ci是指存储排序时不区分字符的大小写。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),i=[l];function d(c,p){return s(),a("div",null,i)}const o=n(t,[["render",d],["__file","02.html.vue"]]);export{o as default};
