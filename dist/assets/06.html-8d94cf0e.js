import{_ as s,o as a,c as n,a as e}from"./app-1b1b276f.js";const t={},o=e(`<h3 id="路由模式" tabindex="-1"><a class="header-anchor" href="#路由模式" aria-hidden="true">#</a> 路由模式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">Hash</span><span class="token operator">:</span> 使用<span class="token constant">URL</span>的hash值来作为路由。支持所有浏览器 这种为默认模式 <span class="token constant">URL</span>中带有#的
<span class="token literal-property property">History</span><span class="token operator">:</span> 当你使用 history 模式时，<span class="token constant">URL</span> 就像正常链接，例如 http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>yoursite<span class="token punctuation">.</span>com<span class="token operator">/</span>user<span class="token operator">/</span>id，也好看！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="激活状态" tabindex="-1"><a class="header-anchor" href="#激活状态" aria-hidden="true">#</a> 激活状态</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>路由跳转时动态添加<span class="token keyword">class</span>样式名称
linkActiveClass 模糊匹配
linkExactActiveClass 精确匹配
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页面结构" tabindex="-1"><a class="header-anchor" href="#页面结构" aria-hidden="true">#</a> 页面结构</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//引入路由对象</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHashHistory<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">,</span> createMemoryHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span>

<span class="token comment">// 创建路由</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//hash路由模式</span>
    <span class="token comment">// history: createWebHistory(), //H5历史记录模式</span>
    <span class="token comment">// history: createMemoryHistory(), //创建一个基于内存的历史记录模式</span>
    <span class="token literal-property property">linkExactActiveClass</span><span class="token operator">:</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">,</span>  <span class="token comment">//点击路由跳转的底部样式标量</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p=[o];function c(r,i){return a(),n("div",null,p)}const d=s(t,[["render",c],["__file","06.html.vue"]]);export{d as default};
