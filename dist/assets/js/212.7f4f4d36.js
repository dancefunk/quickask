(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{761:function(s,e,a){"use strict";a.r(e);var n=a(5),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"react-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[s._v("#")]),s._v(" React-Router")]),s._v(" "),a("h3",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[s._v("#")]),s._v(" 路由")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("版本 v4.2.0")])])]),s._v(" "),a("p",[s._v("我们访问一个 URL，最终定向到哪个资源，这部分工作的处理程序，就是路由。Web 的路由在 组件化框架 诞生之前，一直都是后端的工作，现在的前端也具有处理路由的功能，也渐渐被接受和应用。")]),s._v(" "),a("p",[s._v("目前最新的 "),a("code",[s._v("React")]),s._v(" 路由版本是 "),a("code",[s._v("router 4")]),s._v("，这个版本比起之前的 "),a("code",[s._v("2.x")]),s._v(" 和 "),a("code",[s._v("3.x")]),s._v(" 要简单好用很多。")]),s._v(" "),a("p",[s._v("路由的安装，通过 "),a("code",[s._v("npm install --save react-router-dom@4.3.1")]),s._v(" 命令，"),a("code",[s._v("@")]),s._v("后面带的是版本号，是当前时间点最新的版本。")]),s._v(" "),a("h3",{attrs:{id:"挂载使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#挂载使用"}},[s._v("#")]),s._v(" 挂载使用")]),s._v(" "),a("blockquote",[a("p",[s._v("index.js")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Switch, Link, Route, BrowserRouter} from 'react-router-dom'; // 模块导入 | React Router 包含了以下这几个主要模块\nimport Home from './home.js'\nimport List from './list.js'\n\n// index.js\nclass Index extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/> {/* 首页 */}\n          <Route exact path=\"/list\" component={List}/> {/* 列表 */}\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(, document.getElementById('root'));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("blockquote",[a("p",[s._v("home.js")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React, { Component } from 'react';\n\nexport default class Home extends Component {\n  render() {\n    return <div>首页</div>\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("list.js")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React, { Component } from 'react';\n\nexport default class List extends Component {\n  render() {\n    return <div>列表</div>\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("写完上面这些代码，我们访问 "),a("code",[s._v("localhost:3000/")]),s._v(" 就能定向到 "),a("code",[s._v("home.js")]),s._v(" 而 "),a("code",[s._v("localhost:3000/list")]),s._v(" 对应的就是 "),a("code",[s._v("list.js")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传参"}},[s._v("#")]),s._v(" 传参")]),s._v(" "),a("p",[s._v("路由也是有状态的，不同状态对应不同功能，路由的参数传递，同样也是绑定在 "),a("code",[s._v("Props属性")]),s._v(" 上面。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// index.js\nclass Index extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path="/" component={Home}/>\n          <Route exact path="/list/:n" component={List}/> {/* 传递参数 */}\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\n// list.js\nexport default class List extends Component {\n  render() {\n    return <div>列表 {this.props.match.params.n}</div> {/* 读取参数 */}\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[s._v("#")]),s._v(" 链接")]),s._v(" "),a("p",[s._v("链接是一个组件到另一个组件的跳转，本质是改变另了浏览器的 "),a("code",[s._v("URL输入")]),s._v("。需要注意：链接的前提是 "),a("code",[s._v("路由必须完成挂载")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>首页</h1>\n        <Link to="/list">点击跳转到列表</Link>\n      </div>\n     )\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"browserrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browserrouter"}},[s._v("#")]),s._v(" "),a("code",[s._v("<BrowserRouter>")])]),s._v(" "),a("p",[a("code",[s._v("<BrowserRouter>")]),s._v(" 使用 HTML5 提供的 history API ("),a("code",[s._v("pushState, replaceState 和 popstate 事件")]),s._v(") 来保持 UI 和 URL 的同步。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { BrowserRouter } from 'react-router-dom';\n\n<BrowserRouter\n  basename={string}\n  forceRefresh={bool}\n  getUserConfirmation={func}\n  keyLength={number}\n>\n  <App />\n</BrowserRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("blockquote",[a("p",[s._v("basename: string")])]),s._v(" "),a("p",[s._v("所有位置的基准 URL。如果你的应用程序部署在服务器的子目录，则需要将其设置为子目录。basename 的正确格式是前面有一个前导斜杠，但不能有尾部斜杠。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<BrowserRouter basename="/calendar">\n  <Link to="/today" />\n</BrowserRouter>\n\n上例中的 <Link> 最终将被呈现为：\n\n<a href="/calendar/today" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("forceRefresh: bool")])]),s._v(" "),a("p",[s._v("如果为 "),a("code",[s._v("true")]),s._v(" ，在导航的过程中整个页面将会刷新。一般情况下，只有在不支持 "),a("code",[s._v("HTML5 history API")]),s._v(" 的浏览器中使用此功能。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const supportsHistory = 'pushState' in window.history;\n\n<BrowserRouter forceRefresh={!supportsHistory} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("getUserConfirmation: func")])]),s._v(" "),a("p",[s._v("用于确认导航的函数，默认使用 "),a("code",[s._v("window.confirm")]),s._v("。例如，当从 "),a("code",[s._v("/a")]),s._v(" 导航至 "),a("code",[s._v("/b")]),s._v(" 时，会使用默认的 "),a("code",[s._v("confirm")]),s._v(" 函数弹出一个提示，用户点击确定后才进行导航，否则不做任何处理。译注：需要配合 "),a("code",[s._v("<Prompt>")]),s._v(" 一起使用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 这是默认的确认函数\nconst getConfirmation = (message, callback) => {\n  const allowTransition = window.confirm(message);\n  callback(allowTransition);\n}\n\n<BrowserRouter getUserConfirmation={getConfirmation} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("keyLength: number")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("location.key 的长度，默认为 6。\n\n<BrowserRouter keyLength={12} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"hashrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashrouter"}},[s._v("#")]),s._v(" "),a("code",[s._v("<HashRouter>")])]),s._v(" "),a("p",[a("code",[s._v("<HashRouter>")]),s._v(" 使用 "),a("code",[s._v("URL")]),s._v(" 的 "),a("code",[s._v("hash")]),s._v(" 部分（即 "),a("code",[s._v("window.location.hash")]),s._v("）来保持 "),a("code",[s._v("UI")]),s._v(" 和 "),a("code",[s._v("URL")]),s._v(" 的同步。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { HashRouter } from 'react-router-dom';\n\n<HashRouter>\n  <App />\n</HashRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("注意： 使用 "),a("code",[s._v("hash")]),s._v(" 记录导航历史不支持 "),a("code",[s._v("location.key")]),s._v(" 和 "),a("code",[s._v("location.state")]),s._v("。在以前的版本中，我们视图 "),a("code",[s._v("shim")]),s._v(" 这种行为，但是仍有一些问题我们无法解决。任何依赖此行为的代码或插件都将无法正常使用。由于该技术仅用于支持旧式（低版本）浏览器，因此对于一些新式浏览器，我们鼓励你使用 "),a("code",[s._v("<BrowserHistory>")]),s._v(" 代替。")])]),s._v(" "),a("blockquote",[a("p",[s._v("basename: string")])]),s._v(" "),a("p",[s._v("所有位置的基准 URL。"),a("code",[s._v("basename")]),s._v(" 的正确格式是前面有一个前导斜杠，但不能有尾部斜杠。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<HashRouter basename="/calendar">\n  <Link to="/today" />\n</HashRouter>\n\n\n上例中的 <Link> 最终将被呈现为：\n\n\n<a href="#/calendar/today" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("blockquote",[a("p",[s._v("getUserConfirmation: func")])]),s._v(" "),a("p",[s._v("用于确认导航的函数，默认使用 "),a("code",[s._v("window.confirm")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 这是默认的确认函数\nconst getConfirmation = (message, callback) => {\n  const allowTransition = window.confirm(message);\n  callback(allowTransition);\n}\n\n<HashRouter getUserConfirmation={getConfirmation} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("hashType: string")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("window.location.hash 使用的 hash 类型，有如下几种：\n\tslash - 后面跟一个斜杠，例如 #/ 和 #/sunshine/lollipops\n\tnoslash - 后面没有斜杠，例如 # 和 #sunshine/lollipops\n\thashbang - Google 风格的 ajax crawlable，例如 #!/ 和 #!/sunshine/lollipops\n\n默认为 slash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Link>")])]),s._v(" "),a("p",[s._v("为你的应用提供声明式的、可访问的导航链接。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { Link } from 'react-router-dom';\n\n<Link to=\"/about\">About</Link>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("to: string")])]),s._v(" "),a("p",[s._v("一个字符串形式的链接地址，通过 "),a("code",[s._v("pathname、search")]),s._v(" 和 "),a("code",[s._v("hash")]),s._v(" 属性创建。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<Link to='/courses?sort=name' />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("to: object")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("一个对象形式的链接地址，可以具有以下任何属性：\n\npathname - 要链接到的路径\nsearch - 查询参数\nhash - URL 中的 hash，例如 #the-hash\nstate - 存储到 location 中的额外状态数据\n\n\n<Link to={{\n  pathname: '/courses',\n  search: '?sort=name',\n  hash: '#the-hash',\n  state: {\n    fromDashboard: true\n  }\n}} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("blockquote",[a("p",[s._v("replace: bool")])]),s._v(" "),a("p",[s._v("当设置为 "),a("code",[s._v("true")]),s._v(" 时，点击链接后将替换历史堆栈中的当前条目，而不是添加新条目。默认为 "),a("code",[s._v("false")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Link to="/courses" replace />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("innerRef: func")])]),s._v(" "),a("p",[s._v("允许访问组件的底层引用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const refCallback = node => {\n  // node 指向最终挂载的 DOM 元素，在卸载时为 null\n}\n\n<Link to="/" innerRef={refCallback} />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("others")])]),s._v(" "),a("p",[s._v("你还可以传递一些其它属性，例如 "),a("code",[s._v("title、id")]),s._v(" 或 "),a("code",[s._v("className")]),s._v(" 等。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Link to="/" className="nav" title="a title">About</Link>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"navlink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navlink"}},[s._v("#")]),s._v(" "),a("code",[s._v("<NavLink>")])]),s._v(" "),a("p",[s._v("一个特殊版本的 "),a("code",[s._v("<Link>")]),s._v("，它会在与当前 URL 匹配时为其呈现元素添加样式属性。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { NavLink } from 'react-router-dom';\n\n<NavLink to=\"/about\">About</NavLink>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("activeClassName: string")])]),s._v(" "),a("p",[s._v("当元素处于激活状态时应用的类，默认为 "),a("code",[s._v("active")]),s._v("。它将与 "),a("code",[s._v("className")]),s._v(" 属性一起使用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<NavLink to="/faq" activeClassName="selected">FAQs</NavLink>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("activeStyle: object")])]),s._v(" "),a("p",[s._v("当元素处于激活状态时应用的样式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const activeStyle = {\n  fontWeight: 'bold',\n  color: 'red'\n};\n\n<NavLink to=\"/faq\" activeStyle={activeStyle}>FAQs</NavLink>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("exact: bool")])]),s._v(" "),a("p",[s._v("如果为 "),a("code",[s._v("true")]),s._v("，则只有在位置完全匹配时才应用激活类/样式。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<NavLink exact to="/profile">Profile</NavLink>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("strict: bool")])]),s._v(" "),a("p",[s._v("如果为 "),a("code",[s._v("true")]),s._v("，则在确定位置是否与当前 URL 匹配时，将考虑位置的路径名后面的斜杠。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<NavLink strict to="/events/">Events</NavLink>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("isActive: func")])]),s._v(" "),a("p",[s._v("添加额外逻辑以确定链接是否处于激活状态的函数。如果你要做的不仅仅是验证链接的路径名与当前 URL 的路径名相匹配，那么应该使用它。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 只有当事件 id 为奇数时才考虑激活\nconst oddEvent = (match, location) => {\n  if (!match) {\n    return false;\n  }\n  const eventID = parseInt(match.params.eventID);\n  return !isNaN(eventID) && eventID % 2 === 1;\n}\n\n<NavLink to="/events/123" isActive={oddEvent}>Event 123</NavLink>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("blockquote",[a("p",[s._v("location: object")])]),s._v(" "),a("p",[a("code",[s._v("isActive")]),s._v(" 默认比较当前历史位置（通常是当前的浏览器 URL）。你也可以传递一个不同的位置进行比较。")]),s._v(" "),a("h3",{attrs:{id:"prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prompt"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Prompt>")])]),s._v(" "),a("p",[s._v("用于在位置跳转之前给予用户一些确认信息。当你的应用程序进入一个应该阻止用户导航的状态时（比如表单只填写了一半），弹出一个提示。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { Prompt } from 'react-router-dom';\n\n<Prompt\n  when={formIsHalfFilledOut}\n  message=\"你确定要离开当前页面吗？\"\n/>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("message: string")])]),s._v(" "),a("p",[s._v("当用户试图离开某个位置时弹出的提示信息。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Prompt message="你确定要离开当前页面吗？" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("message: func")])]),s._v(" "),a("p",[s._v("将在用户试图导航到下一个位置时调用。需要返回一个字符串以向用户显示提示，或者返回 "),a("code",[s._v("true")]),s._v(" 以允许直接跳转。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<Prompt message={location => {\n  const isApp = location.pathname.startsWith('/app');\n\n  return isApp ? `你确定要跳转到${location.pathname}吗？` : true;\n}} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("when: bool")])]),s._v(" "),a("p",[s._v("在应用程序中，你可以始终渲染 "),a("code",[s._v("<Prompt>")]),s._v(" 组件，并通过设置 "),a("code",[s._v("when={true}")]),s._v(" 或 "),a("code",[s._v("when={false}")]),s._v(" 以阻止或允许相应的导航，而不是根据某些条件来决定是否渲染 "),a("code",[s._v("<Prompt>")]),s._v(" 组件。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Prompt when={true} message="你确定要离开当前页面吗？" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"memoryrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memoryrouter"}},[s._v("#")]),s._v(" "),a("code",[s._v("<MemoryRouter>")])]),s._v(" "),a("p",[s._v("将 URL 的历史记录保存在内存中的 "),a("code",[s._v("<Router>")]),s._v("（不读取或写入地址栏）。在测试和非浏览器环境中很有用，例如 "),a("code",[s._v("React Native")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { MemoryRouter } from 'react-router-dom';\n\n<MemoryRouter>\n  <App />\n</MemoryRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("initialEntries: array")])]),s._v(" "),a("p",[s._v("历史堆栈中的一系列位置信息。这些可能是带有 "),a("code",[s._v("{pathname, search, hash, state}")]),s._v(" 的完整位置对象或简单的字符串 URL")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<MemoryRouter\n  initialEntries={[ '/one', '/two', { pathname: '/three' } ]}\n  initialIndex={1}\n>\n  <App/>\n</MemoryRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("initialIndex: number")])]),s._v(" "),a("p",[a("code",[s._v("initialEntries")]),s._v(" 数组中的初始位置索引。")]),s._v(" "),a("blockquote",[a("p",[s._v("getUserConfirmation: func")])]),s._v(" "),a("p",[s._v("用于确认导航的函数。当 "),a("code",[s._v("<MemoryRouter>")]),s._v(" 直接与 "),a("code",[s._v("<Prompt>")]),s._v(" 一起使用时，你必须使用此选项。")]),s._v(" "),a("blockquote",[a("p",[s._v("keyLength: number")])]),s._v(" "),a("p",[a("code",[s._v("location.key")]),s._v(" 的长度，默认为 "),a("code",[s._v("6")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"redirect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirect"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Redirect>")])]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("<Redirect>")]),s._v(" 会导航到一个新的位置。新的位置将覆盖历史堆栈中的当前条目，例如服务器端重定向"),a("code",[s._v("（HTTP 3xx）")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import { Route, Redirect } from \'react-router-dom\';\n\n<Route exact path="/" render={() => (\n  loggedIn ? (\n    <Redirect to="/dashboard" />\n  ) : (\n    <PublicHomePage />\n  )\n)} />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("blockquote",[a("p",[s._v("to: string")])]),s._v(" "),a("p",[s._v("要重定向到的 "),a("code",[s._v("URL")]),s._v("，可以是 "),a("code",[s._v("path-to-regexp")]),s._v(" 能够理解的任何有效的 "),a("code",[s._v("URL")]),s._v(" 路径。所有要使用的 "),a("code",[s._v("URL")]),s._v(" 参数必须由 "),a("code",[s._v("from")]),s._v(" 提供。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Redirect to="/somewhere/else" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("to: object")])]),s._v(" "),a("p",[s._v("要重定向到的位置，其中 "),a("code",[s._v("pathname")]),s._v(" 可以是 "),a("code",[s._v("path-to-regexp")]),s._v(" 能够理解的任何有效的 "),a("code",[s._v("URL")]),s._v(" 路径。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<Redirect to={{\n  pathname: '/login',\n  search: '?utm=your+face',\n  state: {\n    referrer: currentLocation\n  }\n}} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("上例中的 "),a("code",[s._v("state")]),s._v(" 对象可以在重定向到的组件中通过 "),a("code",[s._v("this.props.location.state")]),s._v(" 进行访问。而 "),a("code",[s._v("referrer")]),s._v(" 键（不是特殊名称）将通过路径名 "),a("code",[s._v("/login")]),s._v(" 指向的登录组件中的 "),a("code",[s._v("this.props.location.state.referrer")]),s._v(" 进行访问。")]),s._v(" "),a("blockquote",[a("p",[s._v("push: bool")])]),s._v(" "),a("p",[s._v("如果为 "),a("code",[s._v("true")]),s._v("，重定向会将新的位置推入历史记录，而不是替换当前条目。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Redirect push to="/somewhere/else" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("from: string")])]),s._v(" "),a("p",[s._v("要从中进行重定向的路径名，可以是 "),a("code",[s._v("path-to-regexp")]),s._v(" 能够理解的任何有效的 URL 路径。所有匹配的 "),a("code",[s._v("URL")]),s._v(" 参数都会提供给 "),a("code",[s._v("to")]),s._v("，必须包含在 "),a("code",[s._v("to")]),s._v(" 中用到的所有参数，"),a("code",[s._v("to")]),s._v(" 未使用的其它参数将被忽略。")]),s._v(" "),a("p",[s._v("只能在 "),a("code",[s._v("<Switch>")]),s._v(" 组件内使用 "),a("code",[s._v("<Redirect from>")]),s._v("，以匹配一个位置。有关更多细节，请参阅 "),a("code",[s._v("<Switch children>")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<Switch>\n  <Redirect from='/old-path' to='/new-path' />\n  <Route path='/new-path' component={Place} />\n</Switch>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 根据匹配参数进行重定向\n<Switch>\n  <Redirect from='/users/:id' to='/users/profile/:id' />\n  <Route path='/users/profile/:id' component={Profile} />\n</Switch>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("译注：经过实践，发现以上“根据匹配参数进行重定向”的示例存在"),a("code",[s._v("bug")]),s._v("，没有效果。"),a("code",[s._v("to")]),s._v(" 中的 "),a("code",[s._v(":id")]),s._v(" 并不会继承 "),a("code",[s._v("from")]),s._v(" 中的 "),a("code",[s._v(":id")]),s._v(" 匹配的值，而是直接作为字符串显示到浏览器地址栏！！！")])]),s._v(" "),a("h3",{attrs:{id:"route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#route"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Route>")])]),s._v(" "),a("p",[a("code",[s._v("<Route>")]),s._v(" 可能是 "),a("code",[s._v("React Router")]),s._v(" 中最重要的组件，它可以帮助你理解和学习如何更好的使用 "),a("code",[s._v("React Router")]),s._v("。它最基本的职责是在其 "),a("code",[s._v("path")]),s._v(" 属性与某个 "),a("code",[s._v("location")]),s._v(" 匹配时呈现一些 "),a("code",[s._v("UI")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import { BrowserRouter as Router, Route } from \'react-router-dom\';\n\n<Router>\n  <div>\n    <Route exact path="/" component={Home} />\n    <Route path="/news" component={News} />\n  </div>\n</Router>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("如果应用程序的位置是 "),a("code",[s._v("/")]),s._v("，那么 UI 的层次结构将会是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<div>\n  <Home />\n  \x3c!-- react-empty: 2 --\x3e\n</div>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("或者，如果应用程序的位置是 "),a("code",[s._v("/news")]),s._v("，那么 UI 的层次结构将会是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<div>\n  \x3c!-- react-empty: 1 --\x3e\n  <News />\n</div>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Router>")])]),s._v(" "),a("p",[s._v("所有 "),a("code",[s._v("Router")]),s._v(" 组件的通用低阶接口。通常情况下，应用程序只会使用其中一个高阶 "),a("code",[s._v("Router：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<BrowserRouter>\n<HashRouter>\n<MemoryRouter>\n<NativeRouter>\n<StaticRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("使用低阶 "),a("code",[s._v("<Router>")]),s._v(" 的最常见用例是同步一个自定义历史记录与一个状态管理库，比如 "),a("code",[s._v("Redux")]),s._v(" 或 "),a("code",[s._v("Mobx")]),s._v("。请注意，将 "),a("code",[s._v("React Router")]),s._v(" 和状态管理库一起使用并不是必需的，它仅用于深度集成。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { Router } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nconst history = createBrowserHistory();\n\n<Router history={history}>\n  <App />\n</Router>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("blockquote",[a("p",[s._v("history: object")])]),s._v(" "),a("p",[s._v("用于导航的历史记录对象。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import createBrowserHistory from 'history/createBrowserHistory';\n\nconst customHistory = createBrowserHistory();\n\n<Router history={customHistory} />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"staticrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#staticrouter"}},[s._v("#")]),s._v(" "),a("code",[s._v("<StaticRouter>")])]),s._v(" "),a("p",[s._v("一个永远不会改变位置的"),a("code",[s._v("<Router>")]),s._v("。")]),s._v(" "),a("p",[s._v("这在服务器端渲染场景中非常有用，因为用户实际上没有点击，所以位置实际上并未发生变化。因此，名称是 "),a("code",[s._v("static（静态的）")]),s._v("。当你只需要插入一个位置，并在渲染输出上作出断言以便进行简单测试时，它也很有用。")]),s._v(" "),a("p",[s._v("以下是一个示例，"),a("code",[s._v("node server")]),s._v(" 为 "),a("code",[s._v("<Redirect>")]),s._v(" 发送 "),a("code",[s._v("302")]),s._v(" 状态码，并为其它请求发送常规 HTML：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { createServer } from 'http';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter } from 'react-router';\n\ncreateServer((req, res) => {\n  // 这个 context 对象包含了渲染的结果\n  const context = {};\n\n  const html = ReactDOMServer.renderToString(\n    <StaticRouter location={req.url} context={context}>\n      <App />\n    </StaticRouter>\n  );\n\n  // 如果使用 <Redirect>，context.url 将包含要重定向到的 URL\n  if (context.url) {\n    res.writeHead(302, {\n      Location: context.url\n    });\n    res.end();\n  } else {\n    res.write(html);\n    res.end();\n  }\n}).listen(3000);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("blockquote",[a("p",[s._v("basename: string")])]),s._v(" "),a("p",[s._v("所有位置的基准 URL。"),a("code",[s._v("basename")]),s._v(" 的正确格式是前面有一个前导斜杠，但不能有尾部斜杠。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<StaticRouter basename="/calendar">\n  <Link to="/today" />\n</StaticRouter>\n\n上例中的 <Link> 最终将被呈现为：\n\n<a href="/calendar/today" />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("location: string")])]),s._v(" "),a("p",[s._v("服务器收到的 URL，可能是 "),a("code",[s._v("node server")]),s._v(" 上的 "),a("code",[s._v("req.url")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<StaticRouter location={req.url}>\n  <App />\n</StaticRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("location: object")])]),s._v(" "),a("p",[s._v("一个形如 "),a("code",[s._v("{pathname, search, hash, state}")]),s._v(" 的位置对象。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<StaticRouter location={{ pathname: '/bubblegum' }}>\n  <App />\n</StaticRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("context: object")])]),s._v(" "),a("p",[s._v("一个普通的 "),a("code",[s._v("JavaScript")]),s._v(" 对象。在渲染过程中，组件可以向对象添加属性以存储有关渲染的信息。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const context = {};\n\n<StaticRouter context={context}>\n  <App />\n</StaticRouter>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("当一个 "),a("code",[s._v("<Route>")]),s._v(" 匹配时，它将把 "),a("code",[s._v("context")]),s._v("对象传递给呈现为 "),a("code",[s._v("staticContext")]),s._v(" 的组件。")]),s._v(" "),a("h3",{attrs:{id:"switch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[s._v("#")]),s._v(" "),a("code",[s._v("<Switch>")])]),s._v(" "),a("p",[s._v("用于渲染与路径匹配的第一个子 "),a("code",[s._v("<Route>")]),s._v(" 或 "),a("code",[s._v("<Redirect>")]),s._v("。")]),s._v(" "),a("p",[s._v("这与仅仅使用一系列 "),a("code",[s._v("<Route>")]),s._v(" 有何不同？")]),s._v(" "),a("p",[a("code",[s._v("<Switch>")]),s._v(" 只会渲染一个路由。相反，仅仅定义一系列 "),a("code",[s._v("<Route>")]),s._v(" 时，每一个与路径匹配的 "),a("code",[s._v("<Route>")]),s._v(" 都将包含在渲染范围内。考虑如下代码：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Route path="/about" component={About} />\n<Route path="/:user" component={User} />\n<Route component={NoMatch} />\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果 "),a("code",[s._v("URL")]),s._v(" 是 "),a("code",[s._v("/about")]),s._v("，那么 "),a("code",[s._v("<About>、<User>")]),s._v(" 和 "),a("code",[s._v("<NoMatch>")]),s._v(" 将全部渲染，因为它们都与路径匹配。这是通过设计，允许我们以很多方式将 "),a("code",[s._v("<Route>")]),s._v(" 组合成我们的应用程序，例如侧边栏和面包屑、引导标签等。")]),s._v(" "),a("p",[s._v("但是，有时候我们只想选择一个 "),a("code",[s._v("<Route>")]),s._v(" 来呈现。比如我们在 "),a("code",[s._v("URL")]),s._v(" 为 "),a("code",[s._v("/about")]),s._v(" 时不想匹配 "),a("code",[s._v("/:user")]),s._v("（或者显示我们的 404 页面），这该怎么实现呢？以下就是如何使用 "),a("code",[s._v("<Switch>")]),s._v(" 做到这一点：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import { Switch, Route } from \'react-router\';\n\n<Switch>\n  <Route exact path="/" component={Home} />\n  <Route path="/about" component={About} />\n  <Route path="/:user" component={User} />\n  <Route component={NoMatch} />\n</Switch>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("现在，当我们在 "),a("code",[s._v("/about")]),s._v(" 路径时，"),a("code",[s._v("<Switch>")]),s._v(" 将开始寻找匹配的 "),a("code",[s._v("<Route>")]),s._v("。我们知道，"),a("code",[s._v('<Route path="/about" />')]),s._v(" 将会被正确匹配，这时 "),a("code",[s._v("<Switch>")]),s._v(" 会停止查找匹配项并立即呈现 "),a("code",[s._v("<About>")]),s._v("。同样，如果我们在 "),a("code",[s._v("/michael")]),s._v(" 路径时，那么 "),a("code",[s._v("<User>")]),s._v(" 会呈现。")]),s._v(" "),a("p",[s._v("这对于动画转换也很有用，因为匹配的 "),a("code",[s._v("<Route>")]),s._v(" 与前一个渲染位置相同。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<Fade>\n  <Switch>\n    {/* 这里只会渲染一个子元素 */}\n    <Route />\n    <Route />\n  </Switch>\n</Fade>\n\n<Fade>\n  <Route />\n  <Route />\n  {/* 这里总是会渲染两个子元素，也有可能是空渲染，这使得转换更加麻烦 */}\n</Fade>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("参考链接："),a("a",{attrs:{href:"https://segmentfault.com/a/1190000014294604#articleHeader0",target:"_blank",rel:"noopener noreferrer"}},[s._v("React Router 中文文档（一）"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=t.exports}}]);