(window.webpackJsonp=window.webpackJsonp||[]).push([[310],{871:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"mysql数据锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据锁"}},[s._v("#")]),s._v(" Mysql数据锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("Mysql表锁\nMysql行锁\nMysql页面锁\nMysql共享锁\nMysql排它锁\nMysql间隙锁\nMysql乐观锁\nMysql悲观锁\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"锁的特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁的特征"}},[s._v("#")]),s._v(" 锁的特征")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("相对于其他的数据库而言，MySQL的锁机制比较简单，最显著的特点就是不同的存储引擎支持不同的锁机制。\n根据不同的存储引擎，MySQL中锁的特性可以大致归纳如下：\n开销、加锁速度、死锁、粒度、并发性能\n\n开销：指的是mysql表在运作过程中，操作表同时会产生的开销\n\n加锁速度：用户在操作表的过程中会对表进行加锁"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("\n\n死锁：死锁是指两个或者多个事务在同一资源上相互占用，并请求锁定对方占用的资源，从而导致恶性循环的假象。\n多个事务同时锁定同一个资源时，也会产生死锁。\n\n粒度：为了尽可能提高数据库的并发度，每次锁定的数据范围越小越好，理论上每次只锁定当前操作的数据的方案会得到最大的并发度，\n但是管理锁是很耗资源的事情（涉及获取，检查，释放锁等动作），因此数据库系统需要在高并发响应和系统性能两方面进行平衡，\n这样就产生了"),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"锁粒度（Lock granularity）"')]),s._v("的概念。\n\n并发性能：一并请求的发送量。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("某个时间点同时存在多少请求量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"支持程度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持程度"}},[s._v("#")]),s._v(" 支持程度")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[s._v("表引擎")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("行锁")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("表锁")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("页面锁")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("MyISAM")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}}),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("支持")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("BDB")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}}),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("支持")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("支持")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("InnoDB")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("支持")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("支持")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),s._v(" "),a("h3",{attrs:{id:"mysql表锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql表锁"}},[s._v("#")]),s._v(" Mysql表锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("表锁：管理锁的开销最小，同时允许的并发量也最小的锁机制。MyIsam存储引擎使用的锁机制。\n当要写入数据时，把整个表都锁上，此时其他读、写动作一律等待。\n在MySql中，除了MyIsam存储引擎使用这种锁策略外，MySql本身也使用表锁来执行某些特定动作，比如alter table"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"mysql行锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql行锁"}},[s._v("#")]),s._v(" Mysql行锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("行锁：可以支持最大并发的锁策略（同时也带来了最大的锁开销）。InnoDB和Falcon两张存储引擎都采用这种策略。\n行级锁只在存储引擎层实现，而MySQL服务器层没有实现。服务器层完全不了解存储引擎中的锁实现。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"mysql页面锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql页面锁"}},[s._v("#")]),s._v(" Mysql页面锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"mysql共享锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql共享锁"}},[s._v("#")]),s._v(" Mysql共享锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("共享锁又称为读锁，简称"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("锁，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"mysql排它锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql排它锁"}},[s._v("#")]),s._v(" Mysql排它锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("排他锁又称为写锁，简称"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("锁，顾名思义，排他锁就是不能与其他所并存，\n如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，\n包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"mysql间隙锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql间隙锁"}},[s._v("#")]),s._v(" Mysql间隙锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("当我们用范围条件而不是相等条件检索数据，并请求共享或排他锁时，InnoDB会给符合条件的已有数据记录的 索引项加锁；\n对于键值在条件范围内但并不存在的记录，叫做"),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"间隙（GAP)"')]),s._v("，InnoDB也会对这个"),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"间隙"')]),s._v("加锁，\n这种锁机制就是所谓的间隙锁 （Next"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Key锁）。 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"mysql悲观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql悲观锁"}},[s._v("#")]),s._v(" Mysql悲观锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("在读取数据时锁住那几行，其他对这几行的更新需要等到悲观锁结束时才能继续\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"mysql乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql乐观锁"}},[s._v("#")]),s._v(" Mysql乐观锁")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("读取数据时不锁，更新时检查是否数据已经被更新过，如果是则取消当前更新\n一般在悲观锁的等待时间过长而不能接受时我们才会选择乐观锁\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);