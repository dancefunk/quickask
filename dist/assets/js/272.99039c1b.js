(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{828:function(a,s,t){"use strict";t.r(s);var e=t(5),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"查询数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询数据"}},[a._v("#")]),a._v(" 查询数据")]),a._v(" "),t("h1",{attrs:{id:"使用mongo命令行查询数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用mongo命令行查询数据"}},[a._v("#")]),a._v(" 使用mongo命令行查询数据")]),a._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("p",[a._v("使用"),t("code",[a._v("find()")]),a._v("方法在MongoDB集合中查询数据。MongoDB所有的查询范围都是单个集合的。也就是说MongoDB不能跨集合查询数据。")]),a._v(" "),t("p",[a._v("查询可以返回集合中的所有文档，或者仅仅返回指定过滤条件的文档。你可以指定一个过滤条件或才一个判断条件作为参数传递给"),t("code",[a._v("find()")]),a._v("方法。")]),a._v(" "),t("p",[t("code",[a._v("find()")]),a._v("方法在一个游标中返回所有的结果集，通过游标的迭代可以输出所有文档。")]),a._v(" "),t("h2",{attrs:{id:"查询集合中的所有文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询集合中的所有文档"}},[a._v("#")]),a._v(" 查询集合中的所有文档")]),a._v(" "),t("p",[a._v("查询集合中的所有文档，直接调用集合的"),t("code",[a._v("find()")]),a._v("方法，不需要指定条件。如下命令查询"),t("code",[a._v("restaurants")]),a._v("中的所有文档。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v("db.restaurants.find()\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("返回的结果集包含"),t("code",[a._v("restaurants")]),a._v("所有的文档。")]),a._v(" "),t("h2",{attrs:{id:"指定-等于-条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指定-等于-条件"}},[a._v("#")]),a._v(' 指定"等于"条件')]),a._v(" "),t("p",[a._v("查询条件如果是某个字段上的“等于”匹配的话，具有如下格式：")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v("{ "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("field1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(": "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(", "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("field2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(": "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(", ... }\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如果"),t("code",[a._v("<field>")]),a._v("是文档中的顶级字段，并不是内嵌的，也不是数组的话，你可以使用引号括住字段名，或者不使用引号。")]),a._v(" "),t("p",[a._v("如果"),t("code",[a._v("<field>")]),a._v("就文内嵌字段，或者是数组，使用“.”号访问字段。而且必要使用相号括住整个字段名。")]),a._v(" "),t("h2",{attrs:{id:"根据顶级字段查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据顶级字段查询"}},[a._v("#")]),a._v(" 根据顶级字段查询")]),a._v(" "),t("p",[a._v("下面的命令查询所有"),t("code",[a._v("borough")]),a._v('字段值为"Manhattan"的文档。')]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find( { "borough": "Manhattan" } )\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("查询的结果集中仅包含匹配的文档。")]),a._v(" "),t("h2",{attrs:{id:"根据数组中的字段查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据数组中的字段查询"}},[a._v("#")]),a._v(" 根据数组中的字段查询")]),a._v(" "),t("p",[a._v("在restaurants集合中，grades数组包含了内嵌文档作为它的元素。使用“.”号可以在内嵌文档中的某个字段上指定一个条件。同样，需要用引号括住有点号的引用。如下命令查询grades包括一个内嵌文档，它的grade字段的值为'B'的所有文档。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find({"grades.grade": "B"})\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"指定操作条件查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指定操作条件查询"}},[a._v("#")]),a._v(" 指定操作条件查询")]),a._v(" "),t("p",[a._v("MongoDB提供了一些操作用来指定查询条件，比如比较操作。一些操作是除此之外的，比如"),t("code",[a._v("$or")]),a._v("和"),t("code",[a._v("$and")]),a._v("条件操作。使用操作的查询条件的格式如下：")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v("{ "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("field1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(": { "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("operator1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(": "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" } }\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"大于操作-gt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大于操作-gt"}},[a._v("#")]),a._v(" 大于操作($gt)")]),a._v(" "),t("p",[a._v("查询所有grades数组的内嵌文档中score字段的值大于30的文档。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find( { "grades.score": { $gt: 30 } } )\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"小于操作-lt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小于操作-lt"}},[a._v("#")]),a._v(" 小于操作($lt)")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find( { "grades.score": { $lt: 10 } } )\n\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h2",{attrs:{id:"逻辑and"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑and"}},[a._v("#")]),a._v(" 逻辑AND")]),a._v(" "),t("p",[a._v("你可以使用逻辑AND用于查询条件之间，使用逗号隔开。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find( { "cuisine": "Italian", "address.zipcode": "10075" } )\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"逻辑or"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑or"}},[a._v("#")]),a._v(" 逻辑OR")]),a._v(" "),t("p",[a._v("你可以为多个查询条件中使用逻辑OR，使用$or查询操作。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find(\n   { $or: [ { "cuisine": "Italian" }, { "address.zipcode": "10075" } ] }\n)\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("当然，$and也可以使用上面的语法。")]),a._v(" "),t("h2",{attrs:{id:"排序查询结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序查询结果"}},[a._v("#")]),a._v(" 排序查询结果")]),a._v(" "),t("p",[a._v("指定查询结果排序方式的就是在查询后追加一个"),t("code",[a._v("sort()")]),a._v("方法调用。传递给此方法一个文档，包含指定排序字段和排序类型。1表示长充，-1表示降序。")]),a._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[a._v('db.restaurants.find().sort( { "borough": 1, "address.zipcode": 1 } )\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如上命令，先按borough字段升序排列，再按address.zipcode升序排。")])])}),[],!1,null,null,null);s.default=r.exports}}]);