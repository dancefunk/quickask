(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{883:function(t,e,a){"use strict";a.r(e);var s=a(5),l=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"数据库迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库迁移"}},[t._v("#")]),t._v(" 数据库迁移")]),t._v(" "),a("p",[t._v("迁移就像是数据库的版本控制, 允许团队简单轻松的编辑并共享应用的数据库表结构，迁移通常和 Laravel 的 数据库结构生成器配合使用，让你轻松地构建数据库结构。如果你曾经试过让同事手动在数据库结构中添加字段，那么数据库迁移可以让你不再需要做这样的事情。")]),t._v(" "),a("p",[a("code",[t._v("Laravel")]),t._v(" 的 "),a("code",[t._v("Schema")]),t._v("门面 对所有 "),a("code",[t._v("Laravel")]),t._v(" 支持的数据库系统提供了创建和操作数据表的相应支持。")]),t._v(" "),a("h3",{attrs:{id:"生成迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成迁移"}},[t._v("#")]),t._v(" 生成迁移")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("Artisan")]),t._v("命令"),a("code",[t._v("make:migration")]),t._v(" 来创建迁移。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan make:migration create_users_table\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("新的迁移位于 "),a("code",[t._v("database/migrations")]),t._v(" 目录下。每个迁移文件名都包含时间戳，以便让 Laravel 确认迁移的顺序。")]),t._v(" "),a("p",[a("code",[t._v("--table")]),t._v(" 和 "),a("code",[t._v("--create")]),t._v(" 选项可用来指定数据表的名称，或是该迁移被执行时是否将创建的新数据表。这些选项需在预生成迁移文件时填入指定的数据表：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan make:migration create_users_table --create=users\n\nphp artisan make:migration add_votes_to_users_table --table=users\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("如果你想要指定生成迁移指定一个自定义输出路径，则可以在运行 "),a("code",[t._v("make:migration")]),t._v(" 命令时添加 "),a("code",[t._v("--path")]),t._v(" 选项，给定的路径必须是相对于应用程序的基本路径。")]),t._v(" "),a("h3",{attrs:{id:"迁移结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迁移结构"}},[t._v("#")]),t._v(" 迁移结构")]),t._v(" "),a("p",[t._v("迁移类通常会包含2个方法： "),a("code",[t._v("up")]),t._v(" 和 "),a("code",[t._v("down")]),t._v("。 "),a("code",[t._v("up")]),t._v(" 方法用于添加新的数据表， 字段或者索引到数据库， 而 "),a("code",[t._v("down")]),t._v(" 方法就是 "),a("code",[t._v("up")]),t._v(" 方法的反操作，和 "),a("code",[t._v("up")]),t._v(" 里的操作相反。")]),t._v(" "),a("p",[t._v("在这2个方法中都要用到"),a("code",[t._v("Laravel")]),t._v(" 的 "),a("code",[t._v("Schema")]),t._v(" 构建器来创建和修改表，")]),t._v(" "),a("p",[t._v("若要了解 "),a("code",[t._v("Schema")]),t._v(" 生成器中的所有可用方法 ，可以查看它的文档。比如，创建 "),a("code",[t._v("flights")]),t._v(" 表的简单示例:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateFlightsTable extends Migration\n{\n    /**\n     * 运行数据库迁移\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('flights', function (Blueprint $table) {\n            $table->increments('id');\n            $table->string('name');\n            $table->string('airline');\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * 回滚数据库迁移\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::drop('flights');\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h3",{attrs:{id:"运行迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行迁移"}},[t._v("#")]),t._v(" 运行迁移")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("Artisan")]),t._v("命令 "),a("code",[t._v("migrate")]),t._v(" 方法来运行所有未完成的迁移：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"回滚迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚迁移"}},[t._v("#")]),t._v(" 回滚迁移")]),t._v(" "),a("p",[t._v("若要回滚最后一次迁移， 可以使用 "),a("code",[t._v("rollback")]),t._v(" 命令。 此命令将回滚最后一次"),a("code",[t._v("迁移")]),t._v("的操作，其中可能包含多个迁移文件：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:rollback\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("你可以在 "),a("code",[t._v("rollback")]),t._v(" 命令后面加上 "),a("code",[t._v("step")]),t._v(" 参数，来限制回滚迁移的个数。 例如，以下命令将回滚最近五次迁移：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:rollback --step=5\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("migrate:reset")]),t._v(" 命令可以回滚应用程序中的所有迁移：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:reset\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"使用单个命令来执行回滚或迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用单个命令来执行回滚或迁移"}},[t._v("#")]),t._v(" 使用单个命令来执行回滚或迁移")]),t._v(" "),a("p",[a("code",[t._v("migrate:refresh")]),t._v(" 命令不仅会回滚数据库的所有迁移还会接着运行 "),a("code",[t._v("migrate")]),t._v(" 命令。 这个命令可以高效地重建整个数据库：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:refresh \n\n// 刷新数据库结构并执行数据填充\nphp artisan migrate:refresh --seed\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("使用 "),a("code",[t._v("refresh")]),t._v(" 命令并提供 "),a("code",[t._v("step")]),t._v(" 参数来回滚并再执行最后指定的迁移数。例如， 以下命令将回滚并重新执行最后五次迁移：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:refresh --step=5\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"删除所有表-迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除所有表-迁移"}},[t._v("#")]),t._v(" 删除所有表 & 迁移")]),t._v(" "),a("p",[a("code",[t._v("migrate:fresh")]),t._v(" 命令会从数据库中删除所有表，然后执行 "),a("code",[t._v("migrate")]),t._v(" 命令:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:fresh\n\nphp artisan migrate:fresh --seed\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"创建数据表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建数据表"}},[t._v("#")]),t._v(" 创建数据表")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("Schema")]),t._v(" facade的 "),a("code",[t._v("create")]),t._v(" 方法来创建新的数据库表。 "),a("code",[t._v("create")]),t._v(" 方法接受两个参数：第一个参数为数据表的名称，第二个参数是 "),a("code",[t._v("Closure")]),t._v(" ，此闭包会接收一个用于定义新数据表的 "),a("code",[t._v("Blueprint")]),t._v(" 对象：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::create('users', function (Blueprint $table) {\n    $table->increments('id');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("当然，在创建数据表的时候，可以使用任何数据库结构生成器的 "),a("code",[t._v("字段方法")]),t._v(" 来定义数据表的字段。")]),t._v(" "),a("h3",{attrs:{id:"检查数据表-字段是否存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查数据表-字段是否存在"}},[t._v("#")]),t._v(" 检查数据表 / 字段是否存在")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("hasTable")]),t._v(" 和 "),a("code",[t._v("hasColumn")]),t._v(" 方法来检查数据表或字段是否存在：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if (Schema::hasTable('users')) {\n    //\n}\n\nif (Schema::hasColumn('users', 'email')) {\n    //\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"数据库连接-表选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接-表选项"}},[t._v("#")]),t._v(" 数据库连接 & 表选项")]),t._v(" "),a("p",[t._v("如果要对非默认连接的数据库连接执行结构操作，可以使用 "),a("code",[t._v("connection")]),t._v(" 方法：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::connection('foo')->create('users', function (Blueprint $table) {\n    $table->increments('id');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("你可以在数据库结构生成器上使用以下命令来定义表的选项：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->engine = 'InnoDB';")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定表存储引擎 (MySQL)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->charset = 'utf8';")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定数据表的默认字符集 (MySQL)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->collation = 'utf8_unicode_ci';")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定数据表默认的排序规则 (MySQL)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->temporary();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建临时表 (不支持SQL Server)。")])])])]),t._v(" "),a("h3",{attrs:{id:"重命名-删除数据表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名-删除数据表"}},[t._v("#")]),t._v(" 重命名 / 删除数据表")]),t._v(" "),a("p",[t._v("若要重命名数据表，可以使用 "),a("code",[t._v("rename")]),t._v(" 方法：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::rename($from, $to);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("删除数据表， 可使用 "),a("code",[t._v("drop")]),t._v(" 或 "),a("code",[t._v("dropIfExists")]),t._v(" 方法：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::drop('users');\n\nSchema::dropIfExists('users');\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"创建字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建字段"}},[t._v("#")]),t._v(" 创建字段")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("Schema facade")]),t._v(" 的 "),a("code",[t._v("table")]),t._v(" 方法可以更新现有的数据表。如同 "),a("code",[t._v("create")]),t._v(" 方法一样，"),a("code",[t._v("table")]),t._v(" 方法会接受两个参数：一个是数据表的名称，另一个则是接收可以用来向表中添加字段的 "),a("code",[t._v("Blueprint")]),t._v(" 实例的闭包：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->string('email');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"可用的字段类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可用的字段类型"}},[t._v("#")]),t._v(" 可用的字段类型")]),t._v(" "),a("p",[t._v("数据库结构生成器包含构建表时可以指定的各种字段类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->bigIncrements('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("递增 ID（主键），相当于「UNSIGNED BIG INTEGER」")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->bigInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 BIGINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->binary('data');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 BLOB")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->boolean('confirmed');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 BOOLEAN")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->char('name', 100);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带有长度的 CHAR")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->date('created_at');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 DATE")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dateTime('created_at');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 DATETIME")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dateTimeTz('created_at');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带时区 DATETIME")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->decimal('amount', 8, 2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带有精度与基数 DECIMAL")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->double('amount', 8, 2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带有精度与基数 DOUBLE")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->enum('level', ['easy', 'hard']);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 ENUM")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->float('amount', 8, 2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带有精度与基数 FLOAT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->geometry('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 GEOMETRY")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->geometryCollection('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 GEOMETRYCOLLECTION")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->increments('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("递增的 ID (主键)，相当于「UNSIGNED INTEGER」")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->integer('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 INTEGER")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->ipAddress('visitor');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 IP 地址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->json('options');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 JSON")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->jsonb('options');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 JSONB")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->lineString('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 LINESTRING")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->longText('description');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 LONGTEXT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->macAddress('device');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MAC 地址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->mediumIncrements('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("递增 ID (主键) ，相当于「UNSIGNED MEDIUM INTEGER」")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->mediumInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MEDIUMINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->mediumText('description');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MEDIUMTEXT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->morphs('taggable');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于加入递增的 taggable_id 与字符串 taggable_type")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->multiLineString('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MULTILINESTRING")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->multiPoint('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MULTIPOINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->multiPolygon('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 MULTIPOLYGON")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->nullableMorphs('taggable');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于可空版本的 morphs() 字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->nullableTimestamps();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于可空版本的 timestamps() 字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->point('position');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 POINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->polygon('positions');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 POLYGON")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->rememberToken();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于可空版本的 VARCHAR(100) 的 remember_token 字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->smallIncrements('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("递增 ID (主键) ，相当于「UNSIGNED SMALL INTEGER」")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->smallInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 SMALLINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->softDeletes();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于为软删除添加一个可空的 deleted_at 字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->softDeletesTz();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于为软删除添加一个可空的 带时区的 deleted_at 字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->string('name', 100);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带长度的 VARCHAR")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->text('description');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 TEXT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->time('sunrise');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 TIME")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->timeTz('sunrise');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带时区的 TIME")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->timestamp('added_on');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 TIMESTAMP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->timestampTz('added_on');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带时区的 TIMESTAMP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->timestamps();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于可空的 created_at 和 updated_at TIMESTAMP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->timestampsTz();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于可空且带时区的 created_at 和 updated_atTIMESTAMP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->tinyIncrements('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于自动递增 UNSIGNED TINYINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->tinyInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 TINYINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedBigInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 Unsigned BIGINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedDecimal('amount', 8, 2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于带有精度和基数的 UNSIGNED DECIMAL")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 Unsigned INT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedMediumInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 Unsigned MEDIUMINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedSmallInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 Unsigned SMALLINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unsignedTinyInteger('votes');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 Unsigned TINYINT")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->uuid('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 UUID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->year('birth_year');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相当于 YEAR")])])])]),t._v(" "),a("h3",{attrs:{id:"字段修饰"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段修饰"}},[t._v("#")]),t._v(" 字段修饰")]),t._v(" "),a("p",[t._v("除了上述列出的字段类型之外， 还有几个可以在添加字段时使用的\n"),a("code",[t._v("修饰符")]),t._v(" 。例如，如果要把字段设置为 "),a("code",[t._v("可空")]),t._v("，就使用 nullable 方法：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->string('email')->nullable();\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("以下是所有可用的字段修饰符的列表。此列表不包括 "),a("code",[t._v("索引修饰符")]),t._v("：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Modifier")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->after('column')")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('将此字段放置在其它字段 "之后" (MySQL)')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->autoIncrement()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将 INTEGER 类型的字段设置为自动递增的主键")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->charset('utf8')")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定一个字符集 (MySQL)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->collation('utf8_unicode_ci')")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定列的排序规则 (MySQL/SQL Server)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->comment('my comment')")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("为字段增加注释 (MySQL)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->default($value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('为字段指定 "默认" 值')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->first()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('将此字段放置在数据表的 "首位" (MySQL)')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->nullable($value = true)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("此字段允许写入 NULL 值（默认情况下）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->storedAs($expression)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建一个存储生成的字段 (MySQL)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->unsigned()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("设置 INTEGER 类型的字段为 UNSIGNED (MySQL)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->useCurrent()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将 TIMESTAMP 类型的字段设置为使用 CURRENT_TIMESTAMP 作为默认值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("->virtualAs($expression)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建一个虚拟生成的字段 (MySQL)")])])])]),t._v(" "),a("h3",{attrs:{id:"修改字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改字段"}},[t._v("#")]),t._v(" 修改字段")]),t._v(" "),a("p",[t._v("在修改字段之前，请确保将 "),a("code",[t._v("doctrine/dbal")]),t._v(" 依赖添加到 "),a("code",[t._v("composer.json")]),t._v(" 文件中。"),a("code",[t._v("Doctrine DBAL")]),t._v(" 库用于确定字段的当前状态， 并创建对该字段进行指定调整所需的 "),a("code",[t._v("SQL")]),t._v(" 查询：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("composer require doctrine/dbal\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"更新字段属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新字段属性"}},[t._v("#")]),t._v(" 更新字段属性")]),t._v(" "),a("p",[a("code",[t._v("change")]),t._v(" 方法可以将现有的字段类型修改为新的类型或修改属性。 比如，你可能想增加。字符串字段的长度，可以使用 "),a("code",[t._v("change")]),t._v(" 方法把 "),a("code",[t._v("name")]),t._v(" 字段的长度从 "),a("code",[t._v("25")]),t._v(" 增加到 "),a("code",[t._v("50")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->string('name', 50)->change();\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("我们应该将字段修改为可空：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->string('name', 50)->nullable()->change();\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("只有下面的字段类型能被 "),a("code",[t._v("修改")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bigInteger、 binary、 boolean、date、dateTime、dateTimeTz、decimal、integer、\njson、 longText、mediumText、smallInteger、string、text、time、 \nunsignedBigInteger、unsignedInteger and unsignedSmallInteger。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"重命名字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名字段"}},[t._v("#")]),t._v(" 重命名字段")]),t._v(" "),a("p",[t._v("可以使用结构生成器上的 "),a("code",[t._v("renameColumn")]),t._v(" 方法来重命名字段。在重命名字段前， 请确保你的 "),a("code",[t._v("composer.json")]),t._v(" 文件内已经加入 "),a("code",[t._v("doctrine/dbal")]),t._v(" 依赖：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->renameColumn('from', 'to');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("当前不支持 enum 类型的字段重命名。")])]),t._v(" "),a("h3",{attrs:{id:"删除字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除字段"}},[t._v("#")]),t._v(" 删除字段")]),t._v(" "),a("p",[t._v("可以使用结构生成器上的 "),a("code",[t._v("dropColumn")]),t._v(" 方法来删除字段。 在从 "),a("code",[t._v("SQLite")]),t._v(" 数据库删除字段前，你需要在 "),a("code",[t._v("composer.json")]),t._v(" 文件中加入"),a("code",[t._v("doctrine/dbal")]),t._v(" 依赖并在终端执行 "),a("code",[t._v("composer update")]),t._v(" 来安装该依赖：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->dropColumn('votes');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("你可以传递一个字段数组给 "),a("code",[t._v("dropColumn")]),t._v(" 方法来删除多个字段：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('users', function (Blueprint $table) {\n    $table->dropColumn(['votes', 'avatar', 'location']);\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("不支持在使用 SQLite 数据库时在单个迁移中删除或修改多个字段。")])]),t._v(" "),a("h3",{attrs:{id:"可用的命令别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可用的命令别名"}},[t._v("#")]),t._v(" 可用的命令别名")]),t._v(" "),a("p",[t._v("每个索引方法都可以接收一个可选的第二个参数来指定索引的名称。 如果省略，名称将从表和列的名称派生。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropRememberToken();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除 remember_token字段。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropSoftDeletes();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除 deleted_at 字段。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropSoftDeletesTz();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("dropSoftDeletes() 方法的别名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropTimestamps();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除 created_at 和 updated_at 字段。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropTimestampsTz();")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("dropTimestamps() 方法的别名。")])])])]),t._v(" "),a("h3",{attrs:{id:"创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[t._v("#")]),t._v(" 创建索引")]),t._v(" "),a("p",[t._v("结构生成器支持多种类型的索引。首先，先指定字段值唯一，即简单地在字段定义 之后链式调用 "),a("code",[t._v("unique")]),t._v(" 方法来创建索引，例如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->string('email')->unique();\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("或者，你也可以在定义完字段之后创建索引。例如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->unique('email');\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("你甚至可以将数组传递给索引方法来创建一个复合（或合成）索引：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->index(['account_id', 'created_at']);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Laravel 会自动生成一个合理的索引名称，但你也可以传递第二个参数来自定义索引名称：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->unique('email', 'unique_email');\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"可用的索引类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可用的索引类型"}},[t._v("#")]),t._v(" 可用的索引类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->primary('id');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加主键")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->primary(['id', 'parent_id']);")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加复合键")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->unique('email');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加唯一索引")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->index('state');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加普通索引")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->spatialIndex('location');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加空间索引 ( SQLite 除外)")])])])]),t._v(" "),a("h3",{attrs:{id:"删除索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[t._v("#")]),t._v(" 删除索引")]),t._v(" "),a("p",[t._v("若要移除索引， 则必须指定索引的名称。Laravel 默认会自动给索引分配合理的名称。其将数据表名称、索引的字段名称及索引类型简单地连接在了一起。举例如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropPrimary('users_id_primary');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('从 "users" 表中删除主键。')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropUnique('users_email_unique');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('从 "users" 表中删除唯一索引。')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropIndex('geo_state_index');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('从 "geo" 表中删除基本索引')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$table->dropSpatialIndex('geo_location_spatialindex');")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('从 "geo" 表中删除空间索引 ( SQLite 除外).')])])])]),t._v(" "),a("p",[t._v("如果将字段数组传递给 "),a("code",[t._v("dropIndex")]),t._v(" 方法，会删除根据表名、字段和键类型生成的索引名称：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('geo', function (Blueprint $table) {\n    $table->dropIndex(['state']); // 删除索引 'geo_state_index'\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键约束"}},[t._v("#")]),t._v(" 外键约束")]),t._v(" "),a("p",[t._v("Laravel 还支持创建用于在数据库层中的强制引用完整性的外键约束。 例如，让我们在 "),a("code",[t._v("posts")]),t._v(" 表上定义一个引用 "),a("code",[t._v("users")]),t._v(" 表的 "),a("code",[t._v("id")]),t._v(" 字段的 "),a("code",[t._v("user_id")]),t._v(" 字段：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::table('posts', function (Blueprint $table) {\n    $table->integer('user_id')->unsigned();\n\n    $table->foreign('user_id')->references('id')->on('users');\n});\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("还可以为约束的 "),a("code",[t._v("on delete")]),t._v(" 和 "),a("code",[t._v("on update")]),t._v(" 属性指定所需的操作：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->foreign('user_id')\n      ->references('id')->on('users')\n      ->onDelete('cascade');\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("你可以使用 "),a("code",[t._v("dropForeign")]),t._v(" 方法删除外键。外键约束采用的命名方式与索引相同。即，将数据表名称和约束的字段连接起来， 接着加上 "),a("code",[t._v("_foreign")]),t._v(" 后缀：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->dropForeign('posts_user_id_foreign');\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("或者，你也可以传递一个字段数组，在删除的时候会按照约定自动转换为对应的外键名称：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$table->dropForeign(['user_id']);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("你可以在迁移文件里使用以下方法来开启或关闭外键约束：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Schema::enableForeignKeyConstraints();\n\nSchema::disableForeignKeyConstraints();\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h1",{attrs:{id:"数据填充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据填充"}},[t._v("#")]),t._v(" 数据填充")]),t._v(" "),a("p",[a("code",[t._v("Laravel")]),t._v(" 可以用 "),a("code",[t._v("seed")]),t._v(" 类轻松地为数据库填充测试数据。所有的 "),a("code",[t._v("seed")]),t._v(" 类都存放在 "),a("code",[t._v("database/seeds")]),t._v(" 目录下。你可以任意为 "),a("code",[t._v("seed")]),t._v(" 类命名，但是更应该遵守类似 "),a("code",[t._v("UsersTableSeeder")]),t._v(" 的命名规范。"),a("code",[t._v("Laravel")]),t._v(" 默认定义的一个 "),a("code",[t._v("DatabaseSeeder")]),t._v(" 类。可以在这个类中使用 "),a("code",[t._v("call")]),t._v(" 方法来运行其它的 "),a("code",[t._v("seed")]),t._v(" 类从而控制数据填充的顺序。")]),t._v(" "),a("h3",{attrs:{id:"编写-seeders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写-seeders"}},[t._v("#")]),t._v(" 编写 Seeders")]),t._v(" "),a("p",[t._v("运行 "),a("code",[t._v("Artisan")]),t._v(" 命令"),a("code",[t._v("make:seeder")]),t._v(" 生成 "),a("code",[t._v("Seeder")]),t._v("。由框架生成的 "),a("code",[t._v("seeders")]),t._v(" 都将被放置在 "),a("code",[t._v("database/seeds")]),t._v(" 目录下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan make:seeder UsersTableSeeder\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在默认的 "),a("code",[t._v("DatabaseSeeder")]),t._v(" 类中的 "),a("code",[t._v("run")]),t._v(" 方法中添加一条数据插入语句：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * 运行数据库填充。\n     *\n     * @return void\n     */\n    public function run()\n    {\n        DB::table('users')->insert([\n            'name' => str_random(10),\n            'email' => str_random(10).'@gmail.com',\n            'password' => bcrypt('secret'),\n        ]);\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h3",{attrs:{id:"使用模型工厂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用模型工厂"}},[t._v("#")]),t._v(" 使用模型工厂")]),t._v(" "),a("p",[t._v("手动为每个模型填充指定属性很麻烦。作为替代方案，你可以使用 model 工厂 轻松地生成大量数据库数据。")]),t._v(" "),a("p",[t._v("例如，创建 50 个用户并为每个用户创建关联：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/**\n * 运行数据库填充。\n *\n * @return void\n */\npublic function run()\n{\n    factory(App\\User::class, 50)->create()->each(function ($u) {\n        $u->posts()->save(factory(App\\Post::class)->make());\n    });\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"调用其它-seeders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用其它-seeders"}},[t._v("#")]),t._v(" 调用其它 Seeders")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("DatabaseSeeder")]),t._v(" 类中，你可以使用 "),a("code",[t._v("call")]),t._v(" 方法来运行其它的 "),a("code",[t._v("seed")]),t._v(" 类。使用 "),a("code",[t._v("call")]),t._v(" 方法可以将数据填充拆分成多个文件，这样就不会使单个 "),a("code",[t._v("seeder")]),t._v(" 变得非常大。只需简单传递要运行的 "),a("code",[t._v("seeder")]),t._v(" 类名称即可：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/**\n * 运行数据库 seeds。\n *\n * @return void\n */\npublic function run()\n{\n    $this->call([\n        UsersTableSeeder::class,\n        PostsTableSeeder::class,\n        CommentsTableSeeder::class,\n    ]);\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"运行-seeders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行-seeders"}},[t._v("#")]),t._v(" 运行 Seeders")]),t._v(" "),a("p",[t._v("完成 "),a("code",[t._v("seeder")]),t._v(" 类的编写之后，你可能需要使用 "),a("code",[t._v("dump-autoload")]),t._v(" 命令重新生成 "),a("code",[t._v("Composer")]),t._v(" 的自动加载器：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("composer dump-autoload\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("接着就可以使用 "),a("code",[t._v("Artisan")]),t._v(" 命令 "),a("code",[t._v("db:seed")]),t._v(" 来填充数据库了。默认情况下，"),a("code",[t._v("db:seed")]),t._v(" 命令将运行 "),a("code",[t._v("DatabaseSeeder")]),t._v("类，这个类可以用来调用其它 "),a("code",[t._v("Seed")]),t._v(" 类。不过，你也可以使用 "),a("code",[t._v("--class")]),t._v(" 选项来指定一个特定的 "),a("code",[t._v("seeder")]),t._v(" 类：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan db:seed\n\nphp artisan db:seed --class=UsersTableSeeder\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("你也可以使用 "),a("code",[t._v("migrate:refresh")]),t._v(" 命令来填充数据库，该命令会回滚并重新运行所有迁移。这个命令可以用来重建数据库：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("php artisan migrate:refresh --seed\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])}),[],!1,null,null,null);e.default=l.exports}}]);