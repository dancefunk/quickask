(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{599:function(s,n,a){"use strict";a.r(n);var t=a(5),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"函数列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数列表"}},[s._v("#")]),s._v(" 函数列表")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("bcadd — 将两个高精度数字相加\n\nbccomp — 比较两个高精度数字，返回-1, 0, 1\n\nbcdiv — 将两个高精度数字相除\n\nbcmod — 求高精度数字余数\n\nbcmul — 将两个高精度数字相乘\n\nbcpow — 求高精度数字乘方\n\nbcpowmod — 求高精度数字乘方求模，数论里非常常用\n\nbcscale — 配置默认小数点的位数，相当于linux的bc中的“scale=”\n\nbcsqrt — 求高精度数字平方根\n\nbcsub — 将两个高精度数字相减\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h2",{attrs:{id:"误差bug原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#误差bug原因"}},[s._v("#")]),s._v(" 误差Bug原因")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("我们在对浮点数进行 +-*/ 计算的时候，有时会遇到一些计算结果错误的问题，例如intval( 0.58*100); 打印结果是57，而不是58，这个其实是计算机底层二进制无法精确表示浮点数的一个bug。为什么出现这个bug？\n\n首先我们要知道浮点数的表示（IEEE 754：是IEEE二进位浮点数算数标准的编号），具体内容如下：\n\n浮点数，以64位的长度（双精度）为例，会采用1位符号位（E）, 11指数位（Q）, 52位尾数位（M）表示（一共64位）。\n\n符号位：最高位表示数据的正负，0表示正数，1表示负数。\n\n指数位：表示数据以2为底的幂，指数采用偏移码表示。\n\n尾数：表示数据小数点后的有效数字。\n\n例如：0.58的二进制表示基本上(52位)是:0010100011110101110000101000111101011100001010001111；\n\n0.57的二进制表示基本上(52位)是:0010001111010111000010100011110101110000101000111101;\n\n而两者的二进制, 如果只是通过这52位计算的话,分别是:\n\n0.58->0.57999999999999996\n\n0.57->0.56999999999999995\n\n至于0.58*100的具体浮点数乘法, 我们模糊的以心算来看… 0.58 * 100 = 57.999999999,那么intval后，就是57了。\n\n所以，你看似有穷的小数，在计算机的二进制表示里却是无穷的。也因此，浮点数在进行+-*/时候存在不准确的问题。\n\n重点来了，解决这个问题，我们需要了解php有一个BC高精确度函数库，它包含了：相加，比较，相除，相减，求余，相乘，\n\nn次方，配置默认小数点数目，求平方。BC是Binary Calculator的缩写.\n\nbc*函数的参数都是操作数加上一个可选的[intscale],比如bcadd(string$left_operand,string$right_operand[,int$scale])，\n\n如果scale没有提供，就用bcscale的缺省值。这里大数直接用一个由0-9组成的string表示，计算结果返回的也是一个string。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);