(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{552:function(s,t,a){s.exports=a.p+"assets/img/5.bd2ee644.png"},553:function(s,t,a){s.exports=a.p+"assets/img/6.254f7282.png"},554:function(s,t,a){s.exports=a.p+"assets/img/7.6908958e.png"},555:function(s,t,a){s.exports=a.p+"assets/img/8.cf9f37cb.png"},556:function(s,t,a){s.exports=a.p+"assets/img/9.eb0c9a38.jpg"},557:function(s,t,a){s.exports=a.p+"assets/img/10.ce834659.png"},850:function(s,t,a){"use strict";a.r(t);var n=a(5),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"innodb行锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#innodb行锁"}},[s._v("#")]),s._v(" InnoDB行锁")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("InnoDB主要包含几种锁类型：共享锁、排它锁、间隙锁\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("InnoDB与MyISAM的最大不同有两点：一是支持事务（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TRANSACTION")]),s._v("）；二是采用了行级锁。\n行级锁与表级锁本来就有许多不同之处，另外，事务的引入也带来了一些新\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"获取inonodb行锁争用情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取inonodb行锁争用情况"}},[s._v("#")]),s._v(" 获取InonoDB行锁争用情况")]),s._v(" "),n("p",[s._v("可以通过检查InnoDB_row_lock状态变量来分析系统上的行锁的争夺情况")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show status like "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'innodb_row_lock%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Variable_name")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Value")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Innodb_row_lock_current_waits")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Innodb_row_lock_time")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Innodb_row_lock_time_avg")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Innodb_row_lock_time_max")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Innodb_row_lock_waits")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" rows in "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n如果发现锁争用比较严重，如InnoDB_row_lock_waits和InnoDB_row_lock_time_avg的值比较高，\n还可以通过设置InnoDB Monitors来进一步观察发生锁冲突的表、数据行等，并分析锁争用的原因。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"innodb的行锁模式及加锁方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#innodb的行锁模式及加锁方法"}},[s._v("#")]),s._v(" InnoDB的行锁模式及加锁方法")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("InnoDB实现了以下两种类型的行锁。\n\n排他锁（Ｘ）：又称写锁。允许获取排他锁的事务更新数据，阻止其他事务取得相同的数据集共享读锁和排他写锁。\n\t\t若事务"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("对数据对象"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("加上"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("锁，事务"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("可以读"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("也可以修改"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("，其他事务不能再对"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("加任何锁，直到"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("释放"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("上的锁。\n\n共享锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("）：又称读锁。允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。\n\t\t若事务"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("对数据对象"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("加上"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("锁，则事务"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("可以读"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("但不能修改"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("，其他事务只能再对"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("加"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("锁，而不能加"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("锁，直到"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("释放"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("上的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("锁。\n\t\t这保证了其他事务可以读"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("，但在"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T")]),s._v("释放"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("上的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("锁之前不能对"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("做任何修改。\n\n\n对于共享锁大家可能很好理解，就是多个事务只能读数据不能改数据。\n对于排他锁大家的理解可能就有些差别，我当初就犯了一个错误，以为排他锁锁住一行数据后，其他事务就不能读取和修改该行数据，其实不是这样的。\n排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。\nInnoDB引擎默认的修改数据语句：update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("delete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("insert都会自动给涉及到的数据加上排他锁，\nselect语句默认不会加任何锁类型，如果加排他锁可以使用select …"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update语句，加共享锁可以使用select … lock in share mode语句。\n所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update和lock in share mode锁的方式查询数据，\n但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。\n\n另外，为了允许行锁和表锁共存，实现多粒度锁机制，InnoDB还有两种内部使用的意向锁（Intention Locks），这两种意向锁都是表锁。\n\n意向共享锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IS")]),s._v("）：事务打算给数据行共享锁，事务在给一个数据行加共享锁前必须先取得该表的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IS")]),s._v("锁。\n意向排他锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IX")]),s._v("）：事务打算给数据行加排他锁，事务在给一个数据行加排他锁前必须先取得该表的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IX")]),s._v("锁。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("InnoDB行锁模式兼容性列表")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(552),alt:""}})]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("如果一个事务请求的锁模式与当前的锁兼容，InnoDB就请求的锁授予该事务；反之，如果两者两者不兼容，该事务就要等待锁释放。 \n\n意向锁是InnoDB自动加的，不需用户干预。对于"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UPDATE")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DELETE")]),s._v("和"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSERT")]),s._v("语句，InnoDB会自动给涉及数据集加排他锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n对于普通"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v("语句，InnoDB不会加任何锁。\n\n事务可以通过以下语句显式给记录集加共享锁或排他锁：\n共享锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("）："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WHERE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOCK")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SHARE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MODE")]),s._v("。\n排他锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("）："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WHERE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UPDATE")]),s._v("。\n\n用"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SHARE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MODE")]),s._v("获得共享锁，主要用在需要数据依存关系时来确认某行记录是否存在，\n并确保没有人对这个记录进行"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UPDATE")]),s._v("或者"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DELETE")]),s._v("操作。但是如果当前事务也需要对该记录进行更新操作，则很有可能造成死锁，\n对于锁定行记录后需要进行更新操作的应用，应该使用"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v("… "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UPDATE")]),s._v("方式获得排他锁。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"innodb行锁实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#innodb行锁实现方式"}},[s._v("#")]),s._v(" InnoDB行锁实现方式")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("InnoDB行锁是通过给索引上的索引项加锁来实现的，这一点MySQL与Oracle不同，后者是通过在数据块中对相应数据行加锁来实现的。\nInnoDB这种行锁实现特点意味着：只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁！\n在实际应用中，要特别注意InnoDB行锁的这一特性，不然的话，可能导致大量的锁冲突，从而影响并发性能。下面通过一些实际例子来加以说明。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("在不通过索引条件查询的时候，InnoDB确实使用的是表锁，而不是行锁。")])])]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" create table "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tab_no_index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" rows "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("affected ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.15")]),s._v(" sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insert into tab_no_index "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" rows "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("affected ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Records")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Duplicates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Warnings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("img",{attrs:{src:a(553),alt:""}})]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("在上面的例子中，看起来session_1只给一行加了排他锁，但session_2在请求其他行的排他锁时，却出现了锁等待！\n原因就是在没有索引的情况下，InnoDB只能使用表锁。当我们给其增加一个索引后，InnoDB就只锁定了符合条件的行，添加索引，如下例所示：\n\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table tab_no_index add index "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:a(554),alt:""}})]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("由于MySQL的行锁是针对索引加的锁，不是针对记录加的锁，所以虽然是访问不同行的记录，但是如果是使用相同的索引键，是会出现锁冲突的。应用设计的时候要注意这一点")])])]),s._v(" "),n("p",[s._v("在下面的例子中，表tab_with_index的id字段有索引，name字段没有索引：")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" create table "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tab_with_index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),n("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table tab_with_index add index "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table tab_with_index drop index name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" rows "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("affected ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.22")]),s._v(" sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Records")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Duplicates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Warnings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insert into tab_with_index "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" rows "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("affected ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Records")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Duplicates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token argument-name"}},[s._v("Warnings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" select "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" from tab_with_index where id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("id")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("name")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("blockquote",[n("p",[s._v("InnoDB存储引擎使用相同索引键的阻塞例子")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(555),alt:""}})]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("当表有多个索引的时候，不同的事务可以使用不同的索引锁定不同的行，另外，不论是使用主键索引、唯一索引或普通索引，InnoDB都会使用行锁来对数据加锁")])])]),s._v(" "),n("p",[s._v("在下面的例子中，表tab_with_index的id字段有普通索引，name字段有普通索引：")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table tab_with_index add index "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("InnoDB存储引擎的表使用不同索引的阻塞例子")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(556),alt:""}})]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("即便在条件中使用了索引字段，但是否使用索引来检索数据是由MySQL通过判断不同执行计划的代价来决 定的，如果MySQL认为全表扫描效率更高，比如对一些很小的表，它就不会使用索引，这种情况下InnoDB将使用表锁，而不是行锁。因此，在分析锁冲突 时，别忘了检查SQL的执行计划，以确认是否真正使用了索引")])])]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("比如，在tab_with_index表里的name字段有索引，但是name字段是varchar类型的，检索值的数据类型与索引字段不同，\n虽然MySQL能够进行数据类型转换，但却不会使用索引，从而导致InnoDB使用表锁。\n通过用explain检查两条"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL")]),s._v("的执行计划，我们可以清楚地看到了这一点。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" explain select "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" from tab_with_index where name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" \\"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("G")]),s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" explain select "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" from tab_with_index where name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'1'")]),s._v(" \\"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("G")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"间隙锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#间隙锁"}},[s._v("#")]),s._v(" 间隙锁")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("间隙锁（Next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Key锁）\n\n当我们用范围条件而不是相等条件检索数据，并请求共享或排他锁时，\nInnoDB会给符合条件的已有数据记录的索引项加锁；\n对于键值在条件范围内但并不存在的记录，叫做"),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"间隙（GAP)"')]),s._v("，InnoDB也会对这个"),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"间隙"')]),s._v("加锁，这种锁机制就是所谓的间隙锁。\n举例来说，假如emp表中只有"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("条记录，其empid的值分别是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("…"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("，下面的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL")]),s._v("：\n\n\nSelect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" from  emp where empid "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n是一个范围条件的检索，InnoDB不仅会对符合条件的empid值为"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("的记录加锁，\n也会对empid大于"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("（这些记录并不存在）的"),n("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"间隙"')]),s._v("加锁。\n\nInnoDB使用间隙锁的目的，一方面是为了防止幻读，以满足相关隔离级别的要求，对于上面的例子，要是不使用间隙锁，\n如果其他事务插入了empid大于"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("的任何记录，那么本事务如果再次执行上述语句，就会发生幻读；\n另外一方面，是为了满足其恢复和复制的需要。\n\n很显然，在使用范围条件检索并锁定记录时，InnoDB这种加锁机制会阻塞符合条件范围内键值的并发插入，这往往会造成严重的锁等待。\n因此，在实际应用开发中，尤其是并发插入比较多的应用，我们要尽量优化业务逻辑，尽量使用相等条件来访问更新数据，避免使用范围条件。\n\n还要特别说明的是，InnoDB除了通过范围条件加锁时使用间隙锁外，如果使用相等条件请求给一个不存在的记录加锁，InnoDB也会使用间隙锁！\n下面这个例子假设emp表中只有"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("条记录，其empid的值分别是"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("。 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("blockquote",[n("p",[s._v("InnoDB存储引擎的间隙锁阻塞例子")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(557),alt:""}})]),s._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[s._v("对于MyISAM的表锁，主要讨论了以下几点：\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("）共享读锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("）之间是兼容的，但共享读锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("S")]),s._v("）与排他写锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("）之间，以及排他写锁（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v("）之间是互斥的，也就是说读和写是串行的。\n\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）在一定条件下，MyISAM允许查询和插入并发执行，我们可以利用这一点来解决应用中对同一表查询和插入的锁争用问题。\n\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）MyISAM默认的锁调度机制是写优先，这并不一定适合所有应用，用户可以通过设置"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOW_PRIORITY_UPDATES")]),s._v("参数，\n\t或在"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSERT")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UPDATE")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DELETE")]),s._v("语句中指定"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOW_PRIORITY")]),s._v("选项来调节读写锁的争用。\n\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("）由于表锁的锁定粒度大，读写之间又是串行的，因此，如果更新操作较多，MyISAM表可能会出现严重的锁等待，可以考虑采用InnoDB表来减少锁冲突\n\n对于InnoDB表，本文主要讨论了以下几项内容：\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("）InnoDB的行锁是基于索引实现的，如果不通过索引访问数据，InnoDB会使用表锁。\n（"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）介绍了InnoDB间隙锁（Next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("机制，以及InnoDB使用间隙锁的原因。在不同的隔离级别下，InnoDB的锁机制和一致性读策略不同。\n\n在了解InnoDB锁特性后，用户可以通过设计和"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL")]),s._v("调整等措施减少锁冲突和死锁，包括：\n\n    尽量使用较低的隔离级别； 精心设计索引，并尽量使用索引访问数据，使加锁更精确，从而减少锁冲突的机会；\n\n    选择合理的事务大小，小事务发生锁冲突的几率也更小；\n\n    给记录集显式加锁时，最好一次性请求足够级别的锁。比如要修改数据的话，最好直接申请排他锁，而不是先申请共享锁，修改时再请求排他锁，这样容易产生死锁；\n\n    不同的程序访问一组表时，应尽量约定以相同的顺序访问各表，对一个表而言，尽可能以固定的顺序存取表中的行。这样可以大大减少死锁的机会；\n\n    尽量用相等条件访问数据，这样可以避免间隙锁对并发插入的影响； 不要申请超过实际需要的锁级别；除非必须，查询时不要显示加锁；\n    \n    对于一些特定的事务，可以使用表锁来提高处理速度或减少死锁的可能\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);