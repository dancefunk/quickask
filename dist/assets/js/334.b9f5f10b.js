(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{889:function(s,e,n){"use strict";n.r(e);var a=n(5),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"中间层"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间层"}},[s._v("#")]),s._v(" 中间层")]),s._v(" "),n("p",[s._v("Laravel 中间件提供了一种方便的机制来过滤进入应用的 HTTP 请求。例如，Laravel 内置了一个中间件来验证用户的身份认证。如果用户没有通过身份认证，中间件会将用户重定向到登录界面。但是，如果用户被认证，中间件将允许该请求进一步进入该应用。")]),s._v(" "),n("p",[s._v("当然，除了身份认证以外，还可以编写另外的中间件来执行各种任务。例如：CORS 中间件可以负责为所有离开应用的响应添加合适的头部信息；日志中间件可以记录所有传入应用的请求。")]),s._v(" "),n("p",[s._v("Laravel 自带了一些中间件，包括身份验证、CSRF 保护等。所有这些中间件都位于 "),n("code",[s._v("app/Http/Middleware")]),s._v(" 目录。")]),s._v(" "),n("h3",{attrs:{id:"定义中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义中间件"}},[s._v("#")]),s._v(" 定义中间件")]),s._v(" "),n("p",[s._v("通过运行 "),n("code",[s._v("make:middleware Artisan")]),s._v(" 命令来创建新的中间件：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("php artisan make:middleware CheckAge\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("该命令将会在 "),n("code",[s._v("app/Http/Middleware")]),s._v(" 目录下创建一个新的 "),n("code",[s._v("CheckAge")]),s._v("类，在这个中间件中，我们仅允许 "),n("code",[s._v("age")]),s._v(" 参数大于 "),n("code",[s._v("200")]),s._v(" 的请求对此路由进行访问，否则，我们将此用户重定向到 "),n("code",[s._v("home")]),s._v(" 。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass CheckAge\n{\n    /**\n     * 处理传入的请求\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @return mixed\n     */\n    public function handle($request, Closure $next)\n    {\n        if ($request->age <= 200) {\n            return redirect('home');\n        }\n\n        return $next($request);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("正如你所见，假如给定的 "),n("code",[s._v("age")]),s._v(" 参数小于或等于 "),n("code",[s._v("200")]),s._v(" ，这个中间件将返回一个HTTP重定向到客户端；否则，请求将进一步传递到应用中。要让请求继续传递到应用程序中（即允许「通过」中间件验证的），只需使用 "),n("code",[s._v("$request")]),s._v(" 作为参数去调用回调函数 "),n("code",[s._v("$next")]),s._v(" 。")]),s._v(" "),n("p",[s._v("最好将中间件想象为一系列 HTTP 请求必须经过才能进入你应用的「层」。每一层都会检查请求（是否符合某些条件），（如果不符合）甚至可以（在请求访问你的应用之前）完全拒绝掉。")]),s._v(" "),n("h3",{attrs:{id:"前置-后置中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前置-后置中间件"}},[s._v("#")]),s._v(" 前置 & 后置中间件")]),s._v(" "),n("p",[s._v("中间件是在请求之前或之后运行取决于中间件本身。例如, 接下来的这个中间件将在应用处理请求 之前 执行其任务：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass BeforeMiddleware\n{\n    public function handle($request, Closure $next)\n    {\n        // Perform action\n\n        return $next($request);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("而接下来的这个中间件将在应用处理请求 之后 执行其任务：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass AfterMiddleware\n{\n    public function handle($request, Closure $next)\n    {\n        $response = $next($request);\n\n        // 执行操作\n\n        return $response;\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"注册中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册中间件"}},[s._v("#")]),s._v(" 注册中间件")]),s._v(" "),n("h4",{attrs:{id:"全局中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局中间件"}},[s._v("#")]),s._v(" 全局中间件")]),s._v(" "),n("p",[s._v("假设你想让中间件在应用处理每个HTTP请求期间运行，只需要在 "),n("code",[s._v("app/Http/Kernel.php")]),s._v(" 中的 "),n("code",[s._v("$middleware")]),s._v(" 属性中列出这个中间件")]),s._v(" "),n("h4",{attrs:{id:"为路由分配中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为路由分配中间件"}},[s._v("#")]),s._v(" 为路由分配中间件")]),s._v(" "),n("p",[s._v("假设你想为指定的路由分配中间件，首先应该在 "),n("code",[s._v("app/Http/Kernel.php")]),s._v(" 文件内为该中间件分配一个 "),n("code",[s._v("键")]),s._v(" 。默认情况下， "),n("code",[s._v("Kernel")]),s._v(" 类的 "),n("code",[s._v("$routeMiddleware")]),s._v(" 属性下包含了Laravel内置的中间件。若要加入自定义的中间件，只需把它附加到列表后并为其分配一个自定义 "),n("code",[s._v("键")]),s._v(" 即可。例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 在 App\\Http\\Kernel 类中\n\nprotected $routeMiddleware = [\n    'auth' => \\Illuminate\\Auth\\Middleware\\Authenticate::class,\n    'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n    'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n    'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n    'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n    'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n];\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("一旦在 "),n("code",[s._v("Kernel")]),s._v(" 类中定义好了中间件，就可以通过 "),n("code",[s._v("middleware")]),s._v(" 方法将为路由分配中间件：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Route::get('admin/profile', function () {\n    //\n})->middleware('auth');\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("你也可以为路由分配多个中间件：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Route::get('/', function () {\n    //\n})->middleware('first', 'second');\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("分配中间件时，你还可以传递完整的类名：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("use App\\Http\\Middleware\\CheckAge;\n\nRoute::get('admin/profile', function () {\n    //\n})->middleware(CheckAge::class);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"中间件组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件组"}},[s._v("#")]),s._v(" 中间件组")]),s._v(" "),n("p",[s._v("某些时候你可能希望使用一个 key 把多个中间件打包成一个组，方便将他们应用到路由中。你可以使用 Http kernel 的 "),n("code",[s._v("$middlewareGroups")]),s._v(" 属性。")]),s._v(" "),n("p",[s._v("Laravel 内置了 "),n("code",[s._v("web")]),s._v(" 和 "),n("code",[s._v("api")]),s._v(" 两个中间件组，它们包含了常用的中间件,你可能会想应用到 "),n("code",[s._v("web UI")]),s._v(" 和 "),n("code",[s._v("API")]),s._v(" 路由中：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/**\n * 应用程序的路由中间件组\n *\n * @var array\n */\nprotected $middlewareGroups = [\n    'web' => [\n        \\App\\Http\\Middleware\\EncryptCookies::class,\n        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n        \\Illuminate\\Session\\Middleware\\StartSession::class,\n        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n        \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n    ],\n\n    'api' => [\n        'throttle:60,1',\n        'auth:api',\n    ],\n];\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("中间件组和单个中间件一样可以被应用到路由和控制器行为中。同时，中间组很方便得将多个中间件一次性应用到路由上：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Route::get('/', function () {\n    //\n})->middleware('web');\n\nRoute::group(['middleware' => ['web']], function () {\n    //\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("code",[s._v("RouteServiceProvider")]),s._v(" 将 "),n("code",[s._v("web")]),s._v(" 中间组自动应用到 "),n("code",[s._v("routes/web.php")]),s._v(" 。")]),s._v(" "),n("h3",{attrs:{id:"中间件参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件参数"}},[s._v("#")]),s._v(" 中间件参数")]),s._v(" "),n("p",[s._v("中间件也可以接受额外的参数。举个例子，假如你的应用需要在执行特定操作之前验证用户是否为给定的 「角色」，你可以通过创建一个 "),n("code",[s._v("CheckRole")]),s._v(" 中间件，由它来接收「角色」名称作为附加参数。")]),s._v(" "),n("p",[s._v("附加的中间件参数应该在 "),n("code",[s._v("$next")]),s._v(" 参数之后被传递：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass CheckRole\n{\n    /**\n     * 处理传入的参数\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @param  string  $role\n     * @return mixed\n     */\n    public function handle($request, Closure $next, $role)\n    {\n        if (! $request->user()->hasRole($role)) {\n            // 重定向\n        }\n\n        return $next($request);\n    }\n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("定义路由时通过一个 "),n("code",[s._v(":")]),s._v(" 来隔开中间件名称和参数来指定中间件参数。多个参数就使用逗号分隔：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Route::put('post/{id}', function ($id) {\n    //\n})->middleware('role:editor');\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"terminable-中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#terminable-中间件"}},[s._v("#")]),s._v(" Terminable 中间件")]),s._v(" "),n("p",[s._v("有时中间件可能需要在 HTTP 响应发送到浏览器之后处理一些工作。比如，Laravel 内置的「session」中间件会在响应发送到浏览器之后将会话数据写入存储器中。如果你在中间件中定义一个 "),n("code",[s._v("terminate")]),s._v(" 方法，则会在响应发送到浏览器后自动调用：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\n\nnamespace Illuminate\\Session\\Middleware;\n\nuse Closure;\n\nclass StartSession\n{\n    public function handle($request, Closure $next)\n    {\n        return $next($request);\n    }\n\n    public function terminate($request, $response)\n    {\n        // Store the session data...\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("code",[s._v("terminate")]),s._v(" 方法应该同时接收请求和响应。一旦定义了这个中间件，你应该将它添加到路由列表或 "),n("code",[s._v("app/Http/Kernel.php")]),s._v(" 文件的全局中间件中。")]),s._v(" "),n("p",[s._v("在你的中间件上调用 "),n("code",[s._v("terminate")]),s._v(" 调用时，Laravel 会从 服务容器 中解析出一个新的中间件实例。如果要在调用 "),n("code",[s._v("handle")]),s._v(" 和 "),n("code",[s._v("terminate")]),s._v(" 方法时使用同一个中间件实例，就使用容器的 "),n("code",[s._v("singleton")]),s._v(" 方法向容器注册中间件。")])])}),[],!1,null,null,null);e.default=t.exports}}]);