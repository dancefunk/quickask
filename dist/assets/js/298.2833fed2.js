(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{872:function(e,a,s){"use strict";s.r(a);var t=s(5),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),s("p",[e._v("laravel是一个简洁,优雅的PHP开发框架，使用IoC(依赖注入容器)结构和MVC模式。Laravel框架包括数据库迁移、Eloquent ORM(数据库关系)、路由、验证、视图以及Blade模板等等。")]),e._v(" "),s("p",[e._v("作为一个容器框架,laravel 重点解决大型项目中,各个模块功能冗余,耦合度高的问题.让各个模块的功能代码都能轻松通过laravel框架衔接起来,以保障系统在无数个版本的开发过后,代码依然简洁明了,可读性高.让每个参与该项目的开发者,更加专注于自己的业务逻辑.")]),e._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),s("p",[e._v("Laravel 使用 "),s("code",[e._v("Composer")]),e._v(" 来管理项目依赖。因此，在使用 "),s("code",[e._v("Laravel")]),e._v(" 之前，请确保你的机器已经安装了 "),s("code",[e._v("Composer")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('composer global require "laravel/installer"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("确保将 "),s("code",[e._v("composer vender bin")]),e._v(" 目录放置在你的系统环境变量 "),s("code",[e._v("$PATH")]),e._v(" 中，以便系统可以找到 "),s("code",[e._v("Laravel")]),e._v(" 的可执行文件。该目录根据您的操作系统存在不同的位置中；一些常见的配置包括：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("macOS: $HOME/.composer/vendor/bin\nGNU / Linux 发行版: $HOME/.config/composer/vendor/bin\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("安装完成后， "),s("code",[e._v("laravel new")]),e._v(" 命令会在您指定的目录创建一个全新的 "),s("code",[e._v("Laravel")]),e._v(" 项目。例如， "),s("code",[e._v("laravel new blog")]),e._v(" 将会创建一个名为 "),s("code",[e._v("blog")]),e._v(" 的目录，并已安装好所有的 "),s("code",[e._v("Laravel")]),e._v(" 依赖项：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("laravel new blog\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("通过 Composer 创建项目")]),e._v(" "),s("p",[e._v("或者，你也可以在终端中运行 "),s("code",[e._v("create-project")]),e._v(" 命令来安装 Laravel：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("composer create-project --prefer-dist laravel/laravel blog\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"本地开发环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地开发环境"}},[e._v("#")]),e._v(" 本地开发环境")]),e._v(" "),s("p",[e._v("如果您在本地安装了 PHP，并且您想使用 PHP内置的服务器来为您的应用程序提供服务，则可以使用 "),s("code",[e._v("serve Artisan")]),e._v(" 命令。该命令会在 "),s("code",[e._v("http://localhost:8000")]),e._v(" 上启动开发服务器：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan serve\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("公共目录")])])]),e._v(" "),s("p",[e._v("安装完 Laravel 之后，你必须将 web 服务器根目录指向 public 目录。该目录下的 index.php 文件将作为所有进入应用程序的 HTTP 请求的前端控制器。")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("配置文件")])])]),e._v(" "),s("p",[e._v("Laravel 框架的所有配置文件都放在 config 目录中。每个选项都有注释，方便你随时查看文件并熟悉可用的选项。")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("目录权限")])])]),e._v(" "),s("p",[e._v("安装完 Laravel 后，你可能需要给这两个文件配置读写权限："),s("code",[e._v("storage")]),e._v(" 目录和 "),s("code",[e._v("bootstrap/cache")]),e._v(" 目录应该允许 "),s("code",[e._v("Web")]),e._v(" 服务器写入，否则 "),s("code",[e._v("Laravel")]),e._v(" 程序将无法运行。 如果你使用的是 "),s("code",[e._v("Homestead")]),e._v(" 虚拟机, 这些权限已经为你配置好了。")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("应用密钥")])])]),e._v(" "),s("p",[e._v("安装 "),s("code",[e._v("Laravel")]),e._v(" 之后下一件应该做的事就是将应用程序的密钥设置为随机字符串。如果你是通过 "),s("code",[e._v("Composer")]),e._v(" 或 "),s("code",[e._v("Laravel")]),e._v(" 安装器安装的 "),s("code",[e._v("Laravel")]),e._v("，那这个密钥已经为你通过 "),s("code",[e._v("php artisan key:generate")]),e._v(" 命令设置好了。")]),e._v(" "),s("p",[e._v("通常来说，这个字符串长度为 32 个字符。密钥可以在 "),s("code",[e._v(".env")]),e._v(" 环境文件中设置。前提是你要将 "),s("code",[e._v(".env.example")]),e._v(" 文件重命名为 "),s("code",[e._v(".env")]),e._v("。 如果应用程序密钥没有被设置，就不能确保你的用户会话和其他加密数据的安全！")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("其他配置")])])]),e._v(" "),s("p",[e._v("除了以上的配置，"),s("code",[e._v("Laravel")]),e._v(" 几乎就不需要再配置什么了。你随时就能开发！但是，可能的话，还是希望你查看 "),s("code",[e._v("config/app.php")]),e._v(" 文件及其注释。它包含几个你可能想要根据你的应用来更改的选项，比如 timezone 和 locale。")]),e._v(" "),s("h3",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[e._v("#")]),e._v(" 目录结构")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("App/\t\t \t目录包含应用程序的核心代码。\n\tConsole/\t目录包含了所有自定义的 Artisan 命令。\n\tExceptions/ 目录包含了应用的异常处理器，也是应用抛出异常的好地方。\n\tHttp/\t\t目录包含了控制器、中间件和表单请求。几乎所有的进入应用的请求的处理逻辑都被放在这里。\n\tProviders/\t目录包含了应用的所有 服务提供器 。\n\tRules/\t\t目录默认不存在，它会在运行 Artisan 命令 make:rule 命令时被创建。包含应用自定义验证规则对象\n\t\nBootstrap/\t目录包含引导框架并配置自动加载的文件。\nConfig/\t\t目录，顾名思义，包含应用程序所有的配置文件。\nDatabase/\t\t目录包含数据填充和迁移文件。你还可以把它作为 SQLite 数据库存放目录。\npublic/\t\t目录包含了入口文件 index.php ，它是进入应用程序的所有请求的入口点。\nresource/\t\t目录包含了视图和未编译的资源文件（如 LESS、SASS 或 JavaScript）。\nroutes/\t\t目录包含了应用的所有路由定义\n\tweb.php\t\t路由基本上都要定义在 web.php 文件中\n\tapi.php\t\t包含的路由位于 api 中间件组约束之内，支持频率限制功能，这些路由是无状态的，所以请求通过这些路由进入应用需要通过 token 进行认证并且不能访问 Session 状态。\n\tconsole.php\t用于定义所有基于闭包的控制台命令\n\tchannels.php\t用于注册应用支持的所有事件广播频道\t\nstorage/\t\t目录包含编译的 Blade 模板、基于文件的会话和文件缓存、以及框架生成的其他文件。\n\tapp/\t\t用于存放应用生成的文件\n\tframework/\t用于存放框架生成的文件和缓存\n\tlogs/\t\t存放的是应用的日志文件\ntests/\t\t\t目录包含自动化测试文件。Laravel 已内置了 PHPUnit 的测试范例供你参考。\nvendor/\t\t目录包含你的 Composer 依赖包。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);