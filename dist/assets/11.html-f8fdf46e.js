import{_ as n,p as s,q as a,Z as e}from"./framework-823c4b5a.js";const t={},p=e(`<h3 id="什么是会话控制" tabindex="-1"><a class="header-anchor" href="#什么是会话控制" aria-hidden="true">#</a> 什么是会话控制</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>为了使得网站可以跟踪客户端与服务器之间的交互<span class="token punctuation">,</span>保存和记忆每个用户的身份和信息
我们需要一种强有力的解决方案<span class="token punctuation">,</span>这样就产生了会话控制

<span class="token constant">HTTP</span>是一个无状态的协议<span class="token punctuation">,</span>此协议无法来维护两个事务之间的联系
当一个用户请求一个页面后再请求另外一个页面时<span class="token punctuation">,</span><span class="token constant">HTTP</span>无法告诉我们这两个请求是来自同一个人

会话控制思想就是能够在网站中跟踪一个变量<span class="token punctuation">,</span>我们可以跟踪变量就可以做到对用户的支持
并根据授权和用户身份显示不同内容不同页面
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> cookie</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>cookie是在http协议下<span class="token punctuation">,</span>服务器或脚本可以维护客户端信息的一种方式。
cookie是web服务器保存在用户浏览器上的小甜饼<span class="token punctuation">(</span>一个很小的文本文件<span class="token punctuation">)</span>。
它可以包含有关用户的信息<span class="token punctuation">,</span>常用于保存用户名<span class="token punctuation">,</span>密码<span class="token punctuation">,</span>个性化设置<span class="token punctuation">,</span>个人偏好记录等。
当用户访问服务器时<span class="token punctuation">,</span>服务器可以设置和访问cookie的信息。
cookie保存在客户端<span class="token punctuation">,</span>通常是<span class="token constant">IE</span>或Firefox浏览器的cookie临时文件夹中<span class="token punctuation">,</span>可以手动删除。
Cookie是利用了网页代码中的<span class="token constant">HTTP</span>头信息进行传递的<span class="token punctuation">,</span>浏览器的每一次网页请求<span class="token punctuation">,</span>都可以伴随Cookie传递。
注意<span class="token punctuation">:</span>如果浏览器上cookie 太多<span class="token punctuation">,</span>超过了系统所允许的范围<span class="token punctuation">,</span>浏览器也会手动对它进行删除。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-工作原理" tabindex="-1"><a class="header-anchor" href="#cookie-工作原理" aria-hidden="true">#</a> cookie 工作原理</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>当客户访问某个基于<span class="token constant">PHP</span>技术的网站时<span class="token punctuation">,</span>在<span class="token constant">PHP</span>中可以使用setcookie函数生成一个cookie<span class="token operator">.</span>
系统经处理把这个cookie发送到客户端并保存在<span class="token constant">C</span><span class="token punctuation">:</span>\\Documents <span class="token keyword">and</span> Settings\\用户名\\Cookies目录下。
 
cookie是<span class="token constant">HTTP</span>头的一部分<span class="token punctuation">,</span>因此<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数必须在<span class="token constant">HTML</span>本身的任何内容送到浏览器之前调用。
这种限制与header函数一样。
 
当客户再次访问该网站时。
浏览器会自动把<span class="token constant">C</span><span class="token punctuation">:</span>\\Documents <span class="token keyword">and</span> Settings\\用户名\\Cookies目录下与该站点对应的cookie发送到服务器<span class="token operator">.</span>
服务器则把从客户端传来的cookie将自动地转化成一个<span class="token constant">PHP</span>变量。
在<span class="token constant">PHP</span>中<span class="token punctuation">,</span>客户端发来的cookie将被转换成全局变量。可以通过<span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;xxx&#39;</span><span class="token punctuation">]</span>读取
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置cookie" tabindex="-1"><a class="header-anchor" href="#设置cookie" aria-hidden="true">#</a> 设置cookie</h3><blockquote><p>setcookie(name,value,expire,path,domain,secure)</p></blockquote><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">设置cookie的名字.(必须)</td></tr><tr><td style="text-align:left;">value</td><td style="text-align:left;">设置cookie的值</td></tr><tr><td style="text-align:left;">expire</td><td style="text-align:left;">可选。规定 cookie 的过期时间。</td></tr><tr><td style="text-align:left;">path</td><td style="text-align:left;">可选。规定 cookie 的服务器路径</td></tr><tr><td style="text-align:left;">domain</td><td style="text-align:left;">可选。规定 cookie 的域名</td></tr><tr><td style="text-align:left;">secure</td><td style="text-align:left;">可选</td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="获取cookie" tabindex="-1"><a class="header-anchor" href="#获取cookie" aria-hidden="true">#</a> 获取cookie</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">PHP</span>对cookie有很好的支持<span class="token punctuation">,</span>和form表单一样<span class="token operator">.</span>
在接收的时候<span class="token constant">PHP</span>会自动从web服务器接收<span class="token constant">HTTP</span>头并且分析它。接收的时候和表单接收一样    
<span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除cookie" tabindex="-1"><a class="header-anchor" href="#删除cookie" aria-hidden="true">#</a> 删除cookie</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>调用只带有name参数的setcookie<span class="token punctuation">,</span>那么名为这个cookie将被从客户机上删除<span class="token punctuation">;</span> 
例<span class="token punctuation">:</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

设置Cookie的失效时间为<span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span>或<span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span>减多少没有关系<span class="token punctuation">,</span>只要是过期时间就行。
那么这个Cookie在这个页面的浏览完之后就被删除了<span class="token punctuation">(</span>其实是失效了<span class="token punctuation">)</span>。 
当这个Cookie被删除时<span class="token punctuation">,</span>它的值在当前页仍然有效。

如果要把cookie设置成在浏览器关闭后就失效。那么可以直接把expiretime设为<span class="token number">0</span><span class="token punctuation">,</span>或者不设置此值。
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;value&quot;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用cookie注意事项" tabindex="-1"><a class="header-anchor" href="#使用cookie注意事项" aria-hidden="true">#</a> 使用Cookie注意事项</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span>之前不能有任何html输出<span class="token punctuation">,</span>就是空格<span class="token punctuation">,</span>空白行都不行。       
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span>后<span class="token punctuation">,</span>在当前页调用<span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span>不会有输出。必须刷新或到下一个页面才可以看到cookie值。
使用cookie的限制。一个浏览器能创建的cookie数量最多为<span class="token number">300</span>个<span class="token punctuation">,</span>并且每个不能超过<span class="token number">4</span>KB<span class="token punctuation">,</span>
每个<span class="token constant">WEB</span>站点能设置的cookie总数不能超过<span class="token number">20</span>个。
cookie是保存在客户端的<span class="token punctuation">,</span>用户禁用了cookie<span class="token punctuation">,</span>你的cookie自然也就没作用啦<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie跨域共享" tabindex="-1"><a class="header-anchor" href="#cookie跨域共享" aria-hidden="true">#</a> Cookie跨域共享</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>将cookie传递给不同域名上面进行跨域共享操作
新建两个虚拟主机分别是：

www.a.com
www.b.com

www.a.com/a.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;name-1&quot;</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;a.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;name-2&quot;</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;.a.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;name-3&quot;</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;name-4&quot;</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;.b.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter important">?&gt;</span></span>

设置name在b.com服务器上面访问，并且通过安全的 HTTPS 连接来传输 cookie

www.b.com/b.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  
<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;../a/a.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> SESSION</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>Session从用户访问页面开始<span class="token punctuation">,</span>到断开与网站连接为止<span class="token punctuation">,</span>形成一个会话的生命周期。
在会话期间<span class="token punctuation">,</span> 分配客户唯一的一个SessionID<span class="token punctuation">,</span>用来标识当前用户<span class="token punctuation">,</span>与其他用户进行区分。
 
Session会话时<span class="token punctuation">,</span>SessionID会分别保存在客户端和服务器端两个位置<span class="token punctuation">,</span>
对于客户端使用临时的Cookie保存<span class="token punctuation">(</span>Cookie名称为<span class="token constant">PHPSESSID</span><span class="token punctuation">)</span>或者通过<span class="token constant">URL</span>字符串传递<span class="token punctuation">,</span>
服务器端也以文本文件形式保存在指定的Session目录中。
 
Session通过<span class="token constant">ID</span>接受每个访问请求<span class="token punctuation">,</span>
从而识别当前用户、跟踪和保持用户具体资料<span class="token punctuation">,</span>以及Session变量<span class="token punctuation">,</span>
比如session_name等等<span class="token punctuation">,</span>这些变量信息保存在服务器端。
 
SessionID可以作为会话信息保存到数据库中<span class="token punctuation">,</span>进行Session持久化<span class="token punctuation">,</span>
这样可以跟踪每个用户的登陆次数、在线与否、在线时间等。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用会话的基本步骤" tabindex="-1"><a class="header-anchor" href="#使用会话的基本步骤" aria-hidden="true">#</a> 使用会话的基本步骤</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>开始会话 <span class="token operator">&gt;</span> 注册会话变量 <span class="token operator">&gt;</span> 使⽤会话变量 <span class="token operator">&gt;</span> 注销变量并销毁会话 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="开始会话" tabindex="-1"><a class="header-anchor" href="#开始会话" aria-hidden="true">#</a> 开始会话</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 开始一个会话或者返回已经存在的会话。
 
说明<span class="token punctuation">:</span>这个函数没有参数<span class="token punctuation">,</span>且返回值均为<span class="token constant boolean">true</span>。
如果你使用基于cookie的session<span class="token punctuation">,</span>那么在使用<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>之前浏览器不能有任何输出<span class="token punctuation">,</span>
否则会发生以下错误<span class="token punctuation">:</span>
Warning<span class="token punctuation">:</span> Cannot send session cache limiter <span class="token operator">-</span> headers already <span class="token function">sent</span> 
<span class="token punctuation">(</span>output started at <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>test<span class="token operator">.</span>php<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">)</span>
 
也可以在php<span class="token operator">.</span>ini中启动session<span class="token operator">.</span>auto_start<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
这样就无需每次使用session之前都要调用<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>。
启用此指令的缺点是无法在会话中存储对象<span class="token punctuation">,</span>因为定义要在会话开始之前加载才能重新创建对象。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册、使用会话变量" tabindex="-1"><a class="header-anchor" href="#注册、使用会话变量" aria-hidden="true">#</a> 注册、使用会话变量</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">PHP5</span>使用<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;xxx&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>xxx 注册<span class="token constant">SESSION</span>全局变量。和<span class="token constant">GET</span><span class="token punctuation">,</span><span class="token constant">POST</span><span class="token punctuation">,</span><span class="token constant">COOKIE</span>的使用方法相似

<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;张三&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注销会话变量" tabindex="-1"><a class="header-anchor" href="#注销会话变量" aria-hidden="true">#</a> 注销会话变量</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="销毁会话" tabindex="-1"><a class="header-anchor" href="#销毁会话" aria-hidden="true">#</a> 销毁会话</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">session_unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数清除存储在当前会话中的所有变量<span class="token punctuation">,</span>它能有效地将会话重置为创建时的状态。
 
<span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数从存储机制中完全删除会话<span class="token punctuation">,</span>使当前会话失效。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何存储session信息" tabindex="-1"><a class="header-anchor" href="#如何存储session信息" aria-hidden="true">#</a> 如何存储session信息</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>session<span class="token operator">.</span>save_path <span class="token operator">=</span> <span class="token operator">/</span>tmp<span class="token punctuation">;</span>     设为文件时<span class="token punctuation">,</span> session文件保存的路径
session<span class="token operator">.</span>use_cookies <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>     是否使用cookies
session<span class="token operator">.</span>name <span class="token operator">=</span> <span class="token constant">PHPSESSID</span><span class="token punctuation">;</span>     在cookie的session的名字
session<span class="token operator">.</span>auto_start <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>      是否自动启动session
session<span class="token operator">.</span>cookie_lifetime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  设置会话cookie的有效期<span class="token punctuation">,</span>以秒为单位<span class="token punctuation">,</span>为<span class="token number">0</span>时表示直到浏览器被重启
session<span class="token operator">.</span>cookie_path <span class="token operator">=</span> <span class="token operator">/</span> <span class="token punctuation">;</span>     cookie的有效路径
session<span class="token operator">.</span>cookie_domain <span class="token operator">=</span> <span class="token punctuation">;</span>     cookie的有效域
session<span class="token operator">.</span>cache_expire <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">;</span>   设置缓存中的会话文档在 n 分钟后过时
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="session同服务器跨域" tabindex="-1"><a class="header-anchor" href="#session同服务器跨域" aria-hidden="true">#</a> session同服务器跨域</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>将session传递给不同域名上面进行跨域共享操作
新建两个虚拟主机分别是：

www.a.com
www.b.com

www.a.com/a.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token variable">$currentSessionID</span> <span class="token operator">=</span> <span class="token function">session_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Alan Scott&#39;</span><span class="token punctuation">;</span> 

<span class="token variable">$str</span> <span class="token operator">=</span><span class="token string heredoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;</span>DOF</span>
&lt;a target=&quot;_blank&quot; href=&quot;http://b.com/b.php?session=<span class="token interpolation"><span class="token variable">$currentSessionID</span></span>&quot;&gt;跳转&lt;/a&gt;
<span class="token delimiter symbol">DOF<span class="token punctuation">;</span></span></span>

<span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

www.b.com/b.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$currentSessionID</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;session&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">session_id</span><span class="token punctuation">(</span><span class="token variable">$currentSessionID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Session did not work.&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie和session的区别" tabindex="-1"><a class="header-anchor" href="#cookie和session的区别" aria-hidden="true">#</a> cookie和session的区别</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>cookie和session都可以暂时保存多个页面中使用的变量。
 
但是它们有本质的差别<span class="token punctuation">:</span>
	cookie 存放在客户端浏览器中
	session 保存在服务器上
 
它们之间的联系是sessionID一般保存在cookie中<span class="token punctuation">,</span>或者放在<span class="token constant">URL</span>上。
 
当客户端禁用cookie时<span class="token punctuation">,</span>session_id将无法传递<span class="token punctuation">,</span> 此时session失效。

不过php5在linux<span class="token operator">/</span>unix平台可以自动检查cookie状态<span class="token punctuation">,</span>如果客户端设置了禁用<span class="token punctuation">,</span>

则系统自动把session_id附加到url上传递。windows主机则无此功能
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","11.html.vue"]]);export{d as default};
