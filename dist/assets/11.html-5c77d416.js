import{_ as t,r as e,o as p,c as o,b as n,d as c,e as i,a as s}from"./app-a528498f.js";const l={},u=s(`<h3 id="基于json-web-token-封装-中间件鉴权" tabindex="-1"><a class="header-anchor" href="#基于json-web-token-封装-中间件鉴权" aria-hidden="true">#</a> 基于JSON WEB TOKEN 封装 中间件鉴权</h3><blockquote><p>安装</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install jsonwebtoken --save
npm install crypto-js --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><blockquote><p>config/config.default.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/********** token 配置 **********/</span>
config<span class="token punctuation">.</span>jwt <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&#39;bcrypt&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">2</span> <span class="token comment">// 2小时过期</span>
<span class="token punctuation">}</span>

<span class="token comment">//secret : token 加密密钥</span>
<span class="token comment">//expiresIn：token 有效期</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩展-ctx-属性" tabindex="-1"><a class="header-anchor" href="#扩展-ctx-属性" aria-hidden="true">#</a> 扩展 ctx 属性</h3><blockquote><p>app/extend/context.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Cryptojs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto-js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">jwt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> jwt
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
    <span class="token function">returnSucc</span><span class="token punctuation">(</span>msg<span class="token operator">=</span><span class="token string">&#39;成功&#39;</span><span class="token punctuation">,</span> code<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> httpCode<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">成功信息：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 状态码：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, HttpCode：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>httpCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">returnError</span><span class="token punctuation">(</span>msg<span class="token operator">=</span><span class="token string">&#39;失败&#39;</span><span class="token punctuation">,</span> code<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> httpCode<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">失败信息：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 状态码：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, HttpCode：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>httpCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">crypto</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Cryptojs<span class="token punctuation">.</span><span class="token function">HmacSHA256</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;drw_admin888&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * 生成 Token
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Object <span class="token punctuation">}</span></span> <span class="token parameter">params</span> 
     */</span>
    <span class="token function">generateToken</span><span class="token punctuation">(</span> <span class="token parameter">params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span> <span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>jwt<span class="token punctuation">.</span>secret<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>jwt<span class="token punctuation">.</span>expiresIn <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置中间件" tabindex="-1"><a class="header-anchor" href="#配置中间件" aria-hidden="true">#</a> 配置中间件</h3><blockquote><p>app/config/config.default.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/********** 中间件配置 **********/</span>
config<span class="token punctuation">.</span>middleware <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;auth&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
config<span class="token punctuation">.</span>auth <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">allowed</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;/api/v1/user/register&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;/api/v1/user/login&#39;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">//allowed：不需要token验证的路由</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="登录验证中间件" tabindex="-1"><a class="header-anchor" href="#登录验证中间件" aria-hidden="true">#</a> 登录验证中间件</h3><blockquote><p>app/middleware/auth.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * token 访问授权
 * <span class="token keyword">@param</span> <span class="token parameter">oprions</span> <span class="token punctuation">{</span> Array <span class="token punctuation">}</span> 配置项：不需要鉴权的路由
 * <span class="token keyword">@param</span> <span class="token parameter">app</span> <span class="token punctuation">{</span> Object <span class="token punctuation">}</span> 当前应用
 */</span>
 module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

      <span class="token comment">// 1.排除不需要验证 token 的路由</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>allowed<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//2. 获取 header 头token        </span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> authorization <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>header<span class="token punctuation">;</span>
      <span class="token comment">// console.log(ctx.response.header.authorization)</span>
      <span class="token comment">// console.log(authorization)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>authorization<span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">returnError</span><span class="token punctuation">(</span><span class="token string">&#39;您没有权限访问该接口!&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> token <span class="token operator">=</span> authorization<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;Bearer &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
     
      <span class="token comment">//3. 根据token解密，换取用户信息</span>
      <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
          user <span class="token operator">=</span> ctx<span class="token punctuation">.</span>jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>jwt<span class="token punctuation">.</span>secret<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          err<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;TokenExpiredError&#39;</span> <span class="token operator">?</span> ctx<span class="token punctuation">.</span><span class="token function">returnError</span><span class="token punctuation">(</span><span class="token string">&#39;token 已过期! 请重新获取令牌&#39;</span><span class="token punctuation">)</span>
              <span class="token operator">:</span> ctx<span class="token punctuation">.</span><span class="token function">returnError</span><span class="token punctuation">(</span><span class="token string">&#39;Token 令牌不合法!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

     <span class="token comment">//4. 把 user 信息挂载到全局ctx上</span>
     ctx<span class="token punctuation">.</span>auth <span class="token operator">=</span> <span class="token punctuation">{</span>
         <span class="token literal-property property">uid</span><span class="token operator">:</span> user<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>
         <span class="token literal-property property">username</span><span class="token operator">:</span> user<span class="token punctuation">.</span>username
     <span class="token punctuation">}</span>

     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>auth<span class="token punctuation">)</span>

     <span class="token comment">// 5. 继续执行</span>
     <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写一个生成token的控制器方法-将生成的token用作请求头里面的参数" tabindex="-1"><a class="header-anchor" href="#写一个生成token的控制器方法-将生成的token用作请求头里面的参数" aria-hidden="true">#</a> 写一个生成token的控制器方法,将生成的token用作请求头里面的参数</h3><blockquote><p>app/controller/xxxx.js</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">var</span> token <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">generateToken</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">uid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;demo&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用vscode的插件进行接口请求测试-rest-client" tabindex="-1"><a class="header-anchor" href="#用vscode的插件进行接口请求测试-rest-client" aria-hidden="true">#</a> 用vscode的插件进行接口请求测试(REST Client)</h3>`,19),r={href:"https://marketplace.visualstudio.com/items?itemName=humao.rest-client",target:"_blank",rel:"noopener noreferrer"},k=s(`<p>安装好之后，随便找一个目录，新建接口测试文件，文件命名为：<code>auth.http</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET http://localhost:7001/search
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjEsInVzZXJuYW1lIjoiZGVtbyIsImlhdCI6MTY0NDI5Mjk2MiwiZXhwIjoxNjQ0MzAwMTYyfQ.fePgf_IHIMt0Abwm5f7FB0HYEOfbToktc54Ozgaa6bs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET 后面的URL  是请求的地址
第二行的Authorization是请求头里面带入的参数，Bearer就是 上一步生成的token，Bearer字符串是固定的要加上

请求发送成功后，如果是满足条件的URL地址，就会验证，验证不通过就会在控制台弹出：
您没有权限访问该接口！

如果通过的就不会显示出来
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function d(v,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[c("REST Client"),i(a)])])]),k])}const g=t(l,[["render",d],["__file","11.html.vue"]]);export{g as default};
