import{_ as n,o as s,c as a,a as t}from"./app-47c2ac71.js";const e={},p=t(`<h3 id="dml数据处理语言" tabindex="-1"><a class="header-anchor" href="#dml数据处理语言" aria-hidden="true">#</a> DML数据处理语言</h3><blockquote><p>在操作之前，我们准备一张数据表</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">--</span> phpMyAdmin <span class="token constant">SQL</span> Dump
<span class="token operator">--</span> version <span class="token number">4.6</span><span class="token number">.6</span>
<span class="token operator">--</span> https<span class="token punctuation">:</span><span class="token comment">//www.phpmyadmin.net/</span>
<span class="token operator">--</span>
<span class="token operator">--</span> Host<span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">3306</span>
<span class="token operator">--</span> Generation Time<span class="token punctuation">:</span> Jul <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">2017</span> at <span class="token number">05</span><span class="token punctuation">:</span><span class="token number">10</span> <span class="token constant">PM</span>
<span class="token operator">--</span> Server version<span class="token punctuation">:</span> <span class="token number">5.6</span><span class="token number">.35</span>
<span class="token operator">--</span> <span class="token constant">PHP</span> Version<span class="token punctuation">:</span> <span class="token number">5.6</span><span class="token number">.30</span>

<span class="token constant">SET</span> <span class="token constant">SQL_MODE</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;NO_AUTO_VALUE_ON_ZERO&quot;</span><span class="token punctuation">;</span>
<span class="token constant">SET</span> time_zone <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;+00:00&quot;</span><span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Database<span class="token punctuation">:</span> <span class="token string backtick-quoted-string">\`demo\`</span>
<span class="token operator">--</span>
<span class="token constant">CREATE</span> <span class="token constant">DATABASE</span> <span class="token keyword">IF</span> <span class="token constant">NOT</span> <span class="token constant">EXISTS</span> <span class="token string backtick-quoted-string">\`demo\`</span> <span class="token keyword">DEFAULT</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8 <span class="token constant">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
<span class="token keyword">USE</span> <span class="token string backtick-quoted-string">\`demo\`</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Table structure <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article\`</span>
<span class="token operator">--</span>

<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article\`</span> <span class="token punctuation">(</span>
  <span class="token string backtick-quoted-string">\`art_id\`</span> <span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  <span class="token string backtick-quoted-string">\`art_title\`</span> <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  <span class="token string backtick-quoted-string">\`artcate_id\`</span> <span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token constant">NULL</span>
<span class="token punctuation">)</span> <span class="token constant">ENGINE</span><span class="token operator">=</span>InnoDB <span class="token keyword">DEFAULT</span> <span class="token constant">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Dumping data <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article\`</span>
<span class="token operator">--</span>

<span class="token constant">INSERT</span> <span class="token constant">INTO</span> <span class="token string backtick-quoted-string">\`article\`</span> <span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`art_id\`</span><span class="token punctuation">,</span> <span class="token string backtick-quoted-string">\`art_title\`</span><span class="token punctuation">,</span> <span class="token string backtick-quoted-string">\`artcate_id\`</span><span class="token punctuation">)</span> <span class="token function">VALUES</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;国内新闻1&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;国外新闻1&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;体育新闻1&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;社会新闻1&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;国外新闻2&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;体育新闻2&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;社会新闻2&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;财经新闻1&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Table structure <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article_cate\`</span>
<span class="token operator">--</span>

<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article_cate\`</span> <span class="token punctuation">(</span>
  <span class="token string backtick-quoted-string">\`artcate_id\`</span> <span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  <span class="token string backtick-quoted-string">\`artcate_name\`</span> <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token constant">NULL</span>
<span class="token punctuation">)</span> <span class="token constant">ENGINE</span><span class="token operator">=</span>InnoDB <span class="token keyword">DEFAULT</span> <span class="token constant">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Dumping data <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article_cate\`</span>
<span class="token operator">--</span>

<span class="token constant">INSERT</span> <span class="token constant">INTO</span> <span class="token string backtick-quoted-string">\`article_cate\`</span> <span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`artcate_id\`</span><span class="token punctuation">,</span> <span class="token string backtick-quoted-string">\`artcate_name\`</span><span class="token punctuation">)</span> <span class="token function">VALUES</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;国内新闻&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;国外新闻&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;体育新闻&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;社会新闻&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Indexes <span class="token keyword">for</span> dumped tables
<span class="token operator">--</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Indexes <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article\`</span>
<span class="token operator">--</span>
<span class="token constant">ALTER</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article\`</span>
  <span class="token constant">ADD</span> <span class="token constant">PRIMARY</span> <span class="token function">KEY</span> <span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`art_id\`</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> Indexes <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article_cate\`</span>
<span class="token operator">--</span>
<span class="token constant">ALTER</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article_cate\`</span>
  <span class="token constant">ADD</span> <span class="token constant">PRIMARY</span> <span class="token function">KEY</span> <span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`artcate_id\`</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span>
<span class="token operator">--</span> <span class="token constant">AUTO_INCREMENT</span> <span class="token keyword">for</span> dumped tables
<span class="token operator">--</span>

<span class="token operator">--</span>
<span class="token operator">--</span> <span class="token constant">AUTO_INCREMENT</span> <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article\`</span>
<span class="token operator">--</span>
<span class="token constant">ALTER</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article\`</span>
  <span class="token constant">MODIFY</span> <span class="token string backtick-quoted-string">\`art_id\`</span> <span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token constant">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">;</span>
<span class="token operator">--</span>
<span class="token operator">--</span> <span class="token constant">AUTO_INCREMENT</span> <span class="token keyword">for</span> table <span class="token string backtick-quoted-string">\`article_cate\`</span>
<span class="token operator">--</span>
<span class="token constant">ALTER</span> <span class="token constant">TABLE</span> <span class="token string backtick-quoted-string">\`article_cate\`</span>
  <span class="token constant">MODIFY</span> <span class="token string backtick-quoted-string">\`artcate_id\`</span> <span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token constant">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入语句" tabindex="-1"><a class="header-anchor" href="#插入语句" aria-hidden="true">#</a> 插入语句</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">INSERT</span> <span class="token constant">INTO</span> 表名<span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`字段1\`</span><span class="token punctuation">,</span><span class="token string backtick-quoted-string">\`字段2\`</span><span class="token punctuation">)</span> <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;值1&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;值2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> 表名<span class="token punctuation">(</span><span class="token string backtick-quoted-string">\`字段1\`</span><span class="token punctuation">,</span><span class="token string backtick-quoted-string">\`字段2\`</span><span class="token punctuation">)</span> <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;值1&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;值2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;值1&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;值2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> 表名 <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;值1&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;值2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新语句" tabindex="-1"><a class="header-anchor" href="#更新语句" aria-hidden="true">#</a> 更新语句</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>修改一个表的数据
update 表名 set 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>字段n<span class="token operator">=</span>值n where 条件
update demo set name<span class="token operator">=</span><span class="token string single-quoted-string">&#39;demo&#39;</span><span class="token punctuation">,</span>sex<span class="token operator">=</span><span class="token number">1</span> where userid <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>

同时对两个表进行更新
update 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span> set 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>字段n<span class="token operator">=</span>值n where 条件
update money m<span class="token punctuation">,</span>user u m<span class="token operator">.</span>balance<span class="token operator">=</span>m<span class="token operator">.</span>balance<span class="token operator">*</span>u<span class="token operator">.</span>age where m<span class="token operator">.</span>userid<span class="token operator">=</span>u<span class="token operator">.</span>id<span class="token punctuation">;</span>

修改money，将money表的别名设置为m；user表的别名设置为u；
将m表的余额改为m表的balance<span class="token operator">*</span>用户表的age。执行条件是：m<span class="token operator">.</span>userid <span class="token operator">=</span> u<span class="token operator">.</span>id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除语句" tabindex="-1"><a class="header-anchor" href="#删除语句" aria-hidden="true">#</a> 删除语句</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>delete from 表 where 条件<span class="token punctuation">;</span>
delete from user where id <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">//删除掉用户表中id大于10的所有用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清空表语句" tabindex="-1"><a class="header-anchor" href="#清空表语句" aria-hidden="true">#</a> 清空表语句</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>delete和truncate是一样的，但它们有一点不同，那就是<span class="token constant">DELETE</span>可以返回被删除的记录数，
而<span class="token constant">TRUNCATE</span> <span class="token constant">TABLE</span>返回的是<span class="token number">0</span>。

基本语法：<span class="token constant">TRUNCATE</span> <span class="token constant">TABLE</span> 表名<span class="token punctuation">;</span>

示例：<span class="token constant">TRUNCATE</span> <span class="token constant">TABLE</span> user<span class="token punctuation">;</span>

示例说明：清空表的数据，并且让自增的id从<span class="token number">1</span>开始自增
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> SELECT</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>select <span class="token operator">*</span> from 表<span class="token punctuation">;</span>                     <span class="token operator">*</span> 表示查询全部字段
select 字段<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span> from 表<span class="token punctuation">;</span>            要查哪个字段就直接写字段
select <span class="token operator">*</span> from 表 where 条件           根据where后面的条件查询内容
select <span class="token operator">*</span> from 表 where id<span class="token operator">=</span><span class="token number">5</span> <span class="token keyword">and</span> p_id<span class="token operator">=</span><span class="token number">3</span>   查询的条件是id<span class="token operator">=</span><span class="token number">5</span>并且p_id<span class="token operator">=</span><span class="token number">3</span>的数据
select <span class="token operator">*</span> from 表 where id<span class="token operator">=</span><span class="token number">5</span> <span class="token keyword">or</span> id<span class="token operator">=</span><span class="token number">8</span>      查询的条件是id<span class="token operator">=</span><span class="token number">5</span>或者是id<span class="token operator">=</span><span class="token number">8</span>的数据
select <span class="token operator">*</span> from products where price between <span class="token number">1000</span> <span class="token keyword">and</span> <span class="token number">2000</span> 查询<span class="token number">1000</span> <span class="token operator">-</span> <span class="token number">2000</span>之间的数据
select <span class="token operator">*</span> from products where price <span class="token operator">&gt;=</span> <span class="token number">1000</span> <span class="token keyword">and</span> price <span class="token operator">&lt;=</span> <span class="token number">2000</span> 查询<span class="token number">1000</span> <span class="token operator">-</span> <span class="token number">2000</span>之间的数据
select <span class="token operator">*</span> from 表 where id <span class="token function">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>    查询的条件是id<span class="token operator">=</span><span class="token number">1</span>，或者id<span class="token operator">=</span><span class="token number">3</span>，或者id<span class="token operator">=</span><span class="token number">6</span>的数据
select <span class="token operator">*</span> from 表 where id not <span class="token function">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>  查询的条件是id不等于<span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span>的数据
select <span class="token operator">*</span> from 表 limit <span class="token number">5</span>                只查<span class="token number">5</span>条
select <span class="token operator">*</span> from 表 limit <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span>              从第<span class="token number">4</span>条开始，查<span class="token number">5</span>条
select <span class="token operator">*</span> from 表 order by uid <span class="token constant">ASC</span>       排序（升序：asc，降序：desc）
select <span class="token operator">*</span> from 表 group by author       根据author分组（把相同的author数据分到一组）
select <span class="token operator">*</span> from 表 where name like <span class="token string single-quoted-string">&#39;%你是%&#39;</span>  模糊查询name这个字段里面数据有 <span class="token string single-quoted-string">&#39;你是&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="记录联合" tabindex="-1"><a class="header-anchor" href="#记录联合" aria-hidden="true">#</a> 记录联合</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>使用 union 和 union all 关键字，将两个表的数据按照一定的查询条件查询出来后，将结果合并到一起显示。
两者主要的区别是把结果直接合并在一起，而 union 是将 union all 后的结果进行一次distinct，去除重复记录后的结果。

<span class="token constant">UNION</span> 
<span class="token constant">SELECT</span> artcate_id <span class="token constant">FROM</span> article <span class="token constant">UNION</span> <span class="token constant">SELECT</span> artcate_id <span class="token constant">FROM</span> article_cate<span class="token punctuation">;</span>

<span class="token constant">UNION</span> <span class="token constant">ALL</span>
<span class="token constant">SELECT</span> artcate_id <span class="token constant">FROM</span> article <span class="token constant">UNION</span> <span class="token constant">ALL</span> <span class="token constant">SELECT</span> artcate_id <span class="token constant">FROM</span> article_cate<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连表查询" tabindex="-1"><a class="header-anchor" href="#连表查询" aria-hidden="true">#</a> 连表查询</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录        
right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录       
inner join(等值连接) 只返回两个表中联结字段相等的行 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>表<span class="token constant">A</span>记录如下：                             表<span class="token constant">B</span>记录如下<span class="token punctuation">:</span>
aID　　　　　aNum                         bID　　　　　bName
<span class="token number">1</span>　　　　　a20050111                      <span class="token number">1</span>　　　　　<span class="token number">2006032401</span>
<span class="token number">2</span>　　　　　a20050112                      <span class="token number">2</span>　　　　　<span class="token number">2006032402</span>
<span class="token number">3</span>　　　　　a20050113                      <span class="token number">3</span>　　　　　<span class="token number">2006032403</span>
<span class="token number">4</span>　　　　　a20050114                      <span class="token number">4</span>　　　　　<span class="token number">2006032404</span>
<span class="token number">5</span>　　　　　a20050115                      <span class="token number">8</span>　　　　　<span class="token number">2006032408</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="左连接" tabindex="-1"><a class="header-anchor" href="#左连接" aria-hidden="true">#</a> 左连接</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>以左边的表为基准，先把左边的表查出来，再查右边的表，若右边的表没对应的数据显示的就为<span class="token constant">NULL</span>
select <span class="token operator">*</span> from <span class="token constant">A</span> left join <span class="token constant">B</span> on <span class="token constant">A</span><span class="token operator">.</span>aID <span class="token operator">=</span> <span class="token constant">B</span><span class="token operator">.</span>bID

结果如下<span class="token punctuation">:</span>
aID　　　　　aNum　　　　　 bID　　　　　bName
<span class="token number">1</span>　　　　　a20050111　　　　<span class="token number">1</span>　　　　　<span class="token number">2006032401</span>
<span class="token number">2</span>　　　　　a20050112　　　　<span class="token number">2</span>　　　　　<span class="token number">2006032402</span>
<span class="token number">3</span>　　　　　a20050113　　　　<span class="token number">3</span>　　　　　<span class="token number">2006032403</span>
<span class="token number">4</span>　　　　　a20050114　　　　<span class="token number">4</span>　　　　　<span class="token number">2006032404</span>
<span class="token number">5</span>　　　　　a20050115　　　　<span class="token constant">NULL</span>　　　　　<span class="token constant">NULL</span>

总结：left join是以<span class="token constant">A</span>表的记录为基础的<span class="token punctuation">,</span><span class="token constant">A</span>可以看成左表<span class="token punctuation">,</span><span class="token constant">B</span>可以看成右表<span class="token punctuation">,</span>left join是以左表为准的<span class="token operator">.</span>
换句话说<span class="token punctuation">,</span>左表<span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span>的记录将会全部表示出来<span class="token punctuation">,</span>而右表<span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">)</span>只会显示符合搜索条件的记录<span class="token punctuation">(</span>例子中为<span class="token punctuation">:</span> <span class="token constant">A</span><span class="token operator">.</span>aID <span class="token operator">=</span> <span class="token constant">B</span><span class="token operator">.</span>bID<span class="token punctuation">)</span><span class="token operator">.</span>
<span class="token constant">B</span>表记录不足的地方均为<span class="token constant">NULL</span><span class="token operator">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="右连接" tabindex="-1"><a class="header-anchor" href="#右连接" aria-hidden="true">#</a> 右连接</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>以右边的表为基准，先把右边的表查出来，再查左边的表，若左边的表没对应的数据显示的就为<span class="token constant">NULL</span>
select <span class="token operator">*</span> from <span class="token constant">A</span> right join <span class="token constant">B</span> on <span class="token constant">A</span><span class="token operator">.</span>aID <span class="token operator">=</span> <span class="token constant">B</span><span class="token operator">.</span>bID

结果如下<span class="token punctuation">:</span>
aID　　　　　aNum　　　　　 bID　　　　　bName
<span class="token number">1</span>　　　　　a20050111　　　　<span class="token number">1</span>　　　　　<span class="token number">2006032401</span>
<span class="token number">2</span>　　　　　a20050112　　　　<span class="token number">2</span>　　　　　<span class="token number">2006032402</span>
<span class="token number">3</span>　　　　　a20050113　　　　<span class="token number">3</span>　　　　　<span class="token number">2006032403</span>
<span class="token number">4</span>　　　　　a20050114　　　　<span class="token number">4</span>　　　　　<span class="token number">2006032404</span>
<span class="token constant">NULL</span>　　　　　<span class="token constant">NULL</span>　　　　　<span class="token number">8</span>　　　　　<span class="token number">2006032408</span>

总结：仔细观察一下<span class="token punctuation">,</span>就会发现<span class="token punctuation">,</span>和left join的结果刚好相反<span class="token punctuation">,</span>这次是以右表<span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">)</span>为基础的<span class="token punctuation">,</span><span class="token constant">A</span>表不足的地方用<span class="token constant">NULL</span>填充<span class="token operator">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="内链接" tabindex="-1"><a class="header-anchor" href="#内链接" aria-hidden="true">#</a> 内链接</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>select <span class="token operator">*</span> from <span class="token constant">A</span> inner join <span class="token constant">B</span> on <span class="token constant">A</span><span class="token operator">.</span>aID <span class="token operator">=</span> <span class="token constant">B</span><span class="token operator">.</span>bID

结果如下<span class="token punctuation">:</span>
aID　　　　　aNum　　　　　bID　　　　　bName
<span class="token number">1</span>　　　　　a20050111　　　　<span class="token number">1</span>　　　　　<span class="token number">2006032401</span>
<span class="token number">2</span>　　　　　a20050112　　　　<span class="token number">2</span>　　　　　<span class="token number">2006032402</span>
<span class="token number">3</span>　　　　　a20050113　　　　<span class="token number">3</span>　　　　　<span class="token number">2006032403</span>
<span class="token number">4</span>　　　　　a20050114　　　　<span class="token number">4</span>　　　　　<span class="token number">2006032404</span>

总结：很明显<span class="token punctuation">,</span>这里只显示出了 <span class="token constant">A</span><span class="token operator">.</span>aID <span class="token operator">=</span> <span class="token constant">B</span><span class="token operator">.</span>bID的记录<span class="token operator">.</span>这说明inner join并不以谁为基础<span class="token punctuation">,</span>它只显示符合条件的记录<span class="token operator">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">LEFT</span> <span class="token constant">JOIN</span>操作用于在任何的 <span class="token constant">FROM</span> 子句中，组合来源表的记录。
使用 <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> 运算来创建一个左边外部联接。
左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录。

语法：<span class="token constant">FROM</span> table1 <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> table2 <span class="token constant">ON</span> table1<span class="token operator">.</span>field1 compopr table2<span class="token operator">.</span>field2

说明：table1<span class="token punctuation">,</span> table2参数用于指定要将记录组合的表的名称。
field1<span class="token punctuation">,</span> field2参数指定被联接的字段的名称<span class="token operator">.</span>且这些字段必须有相同的数据类型及包含相同类型的数据<span class="token punctuation">,</span>但它们不需要有相同的名称<span class="token operator">.</span>
compopr参数指定关系比较运算符：<span class="token string double-quoted-string">&quot;=&quot;</span>， <span class="token string double-quoted-string">&quot;&lt;&quot;</span>， <span class="token string double-quoted-string">&quot;&gt;&quot;</span>， <span class="token string double-quoted-string">&quot;&lt;=&quot;</span>， <span class="token string double-quoted-string">&quot;&gt;=&quot;</span> 或 <span class="token string double-quoted-string">&quot;&lt;&gt;&quot;</span>。
如果在<span class="token constant">INNER</span> <span class="token constant">JOIN</span>操作中要联接包含Memo 数据类型或 <span class="token constant">OLE</span> <span class="token keyword type-declaration">Object</span> 数据类型数据的字段，将会发生错误<span class="token operator">.</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="group-by" tabindex="-1"><a class="header-anchor" href="#group-by" aria-hidden="true">#</a> GROUP-BY</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>根据字段分组（把相同的内容数据分到一组）

<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> article <span class="token constant">GROUP</span> <span class="token constant">BY</span> art_title<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
<span class="token operator">|</span> <span class="token class-name">art_id</span> <span class="token operator">|</span> <span class="token class-name">art_title</span>     <span class="token operator">|</span> <span class="token class-name">artcate_id</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
<span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span> 体育新闻<span class="token number">1</span>     <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span> 体育新闻<span class="token number">2</span>     <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span> 国内新闻<span class="token number">1</span>     <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">2</span> <span class="token operator">|</span> 国外新闻<span class="token number">1</span>     <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">5</span> <span class="token operator">|</span> 国外新闻<span class="token number">2</span>     <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">4</span> <span class="token operator">|</span> 社会新闻<span class="token number">1</span>     <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">7</span> <span class="token operator">|</span> 社会新闻<span class="token number">2</span>     <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>
<span class="token operator">|</span>      <span class="token number">8</span> <span class="token operator">|</span> 财经新闻<span class="token number">1</span>     <span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
<span class="token number">8</span> rows in <span class="token function">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="having" tabindex="-1"><a class="header-anchor" href="#having" aria-hidden="true">#</a> HAVING</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>在 <span class="token constant">SQL</span> 中增加 <span class="token constant">HAVING</span> 子句原因是，<span class="token constant">WHERE</span> 关键字无法与合计函数一起使用。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">O_Id</th><th style="text-align:left;">OrderDate</th><th style="text-align:left;">OrderPrice</th><th style="text-align:left;">Customer</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">2008/12/29</td><td style="text-align:left;">1000</td><td style="text-align:left;">Bush</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">2008/11/23</td><td style="text-align:left;">1600</td><td style="text-align:left;">Carter</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">2008/10/05</td><td style="text-align:left;">700</td><td style="text-align:left;">Bush</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">2008/09/28</td><td style="text-align:left;">300</td><td style="text-align:left;">Bush</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">2008/08/06</td><td style="text-align:left;">2000</td><td style="text-align:left;">Adams</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;">2008/07/21</td><td style="text-align:left;">100</td><td style="text-align:left;">Carter</td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>现在，我们希望查找订单总金额少于 <span class="token number">2000</span> 的客户。

我们使用如下 <span class="token constant">SQL</span> 语句：
<span class="token constant">SELECT</span> Customer<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>OrderPrice<span class="token punctuation">)</span> <span class="token constant">FROM</span> Orders <span class="token constant">GROUP</span> <span class="token constant">BY</span> Customer <span class="token constant">HAVING</span> <span class="token function">SUM</span><span class="token punctuation">(</span>OrderPrice<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="select-into" tabindex="-1"><a class="header-anchor" href="#select-into" aria-hidden="true">#</a> SELECT-INTO</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">SELECT</span> <span class="token constant">INTO</span> 语句可用于创建表的备份复件。
<span class="token constant">SELECT</span> <span class="token constant">INTO</span> 语句从一个表中选取数据，然后把数据插入另一个表中。
<span class="token constant">SELECT</span> <span class="token constant">INTO</span> 语句常用于创建表的备份复件或者用于对记录进行存档。

下面的例子会制作 <span class="token string double-quoted-string">&quot;Persons&quot;</span> 表的备份复件：
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">INTO</span> Persons_backup <span class="token constant">FROM</span> Persons

<span class="token constant">IN</span> 子句可用于向另一个数据库中拷贝表：
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">INTO</span> Persons <span class="token constant">IN</span> <span class="token string single-quoted-string">&#39;Backup.mdb&#39;</span> <span class="token constant">FROM</span> Persons

如果我们希望拷贝某些域，可以在 <span class="token constant">SELECT</span> 语句后列出这些域：
<span class="token constant">SELECT</span> LastName<span class="token punctuation">,</span>FirstName <span class="token constant">INTO</span> Persons_backup <span class="token constant">FROM</span> Persons

下面的例子通过从<span class="token string double-quoted-string">&quot;Persons&quot;</span>表中提取居住在<span class="token string double-quoted-string">&quot;Beijing&quot;</span>的人的信息，创建了一个带有两个列的名为<span class="token string double-quoted-string">&quot;Persons_backup&quot;</span>的表：
<span class="token constant">SELECT</span> LastName<span class="token punctuation">,</span>Firstname <span class="token constant">INTO</span> Persons_backup <span class="token constant">FROM</span> Persons <span class="token constant">WHERE</span> City<span class="token operator">=</span><span class="token string single-quoted-string">&#39;Beijing&#39;</span>

下面的例子会创建一个名为<span class="token string double-quoted-string">&quot;Persons_Order_Backup&quot;</span>的新表，其中包含了从Persons和Orders两个表中取得的信息：
<span class="token constant">SELECT</span> Persons<span class="token operator">.</span>LastName<span class="token punctuation">,</span>Orders<span class="token operator">.</span>OrderNo <span class="token constant">INTO</span> Persons_Order_Backup <span class="token constant">FROM</span> Persons <span class="token constant">INNER</span> <span class="token constant">JOIN</span> Orders <span class="token constant">ON</span> Persons<span class="token operator">.</span>Id_P<span class="token operator">=</span>Orders<span class="token operator">.</span>Id_P
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="all和any子查询" tabindex="-1"><a class="header-anchor" href="#all和any子查询" aria-hidden="true">#</a> ALL和ANY子查询</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">ALL</span>则必须要符合子查询的所有值才可以
<span class="token constant">ANY</span>要符合子查询结果的任何一个值即可以
而且须注意<span class="token constant">ALL</span>和<span class="token constant">ANY</span>操作符不能单独使用，而只能与单行比较符（<span class="token operator">=</span>、<span class="token operator">&gt;</span>、<span class="token operator">&lt;</span> 、<span class="token operator">&gt;=</span> 、<span class="token operator">&lt;=</span> 、<span class="token operator">&lt;</span><span class="token operator">&gt;</span>）结合使用

查询出<span class="token number">01</span>班中，年龄大于 <span class="token number">02</span>班所有人的同学
select <span class="token operator">*</span> from student where 班级<span class="token operator">=</span><span class="token string single-quoted-string">&#39;01&#39;</span> <span class="token keyword">and</span> age <span class="token operator">&gt;</span> <span class="token function">all</span><span class="token punctuation">(</span>select age from student where 班级<span class="token operator">=</span><span class="token string single-quoted-string">&#39;02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

查询出<span class="token number">01</span>班中，年龄大于 <span class="token number">02</span>班任意一个的同学
select <span class="token operator">*</span> from student where 班级<span class="token operator">=</span><span class="token string single-quoted-string">&#39;01&#39;</span> <span class="token keyword">and</span> age <span class="token operator">&gt;</span> <span class="token function">any</span><span class="token punctuation">(</span>select age from student where 班级<span class="token operator">=</span><span class="token string single-quoted-string">&#39;02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),o=[p];function c(l,r){return s(),a("div",null,o)}const u=n(e,[["render",c],["__file","03.html.vue"]]);export{u as default};
