import{_ as n,p as s,q as a,Y as t}from"./framework-aa5c4115.js";const p={},e=t(`<h3 id="node-mysql-promise" tabindex="-1"><a class="header-anchor" href="#node-mysql-promise" aria-hidden="true">#</a> node-mysql-promise</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>npm install node-mysql-promise
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>node mysql操作封装类，基于promise，
借鉴75team开源项目thinkjs中model操作，数据库连接使用node-mysql的连接池。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> Mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node-mysql-promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> mysql <span class="token operator">=</span> Mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">host</span>        <span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">user</span>        <span class="token operator">:</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">password</span>    <span class="token operator">:</span> <span class="token string">&#39;password&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM table;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><ul><li><code>host</code>: 连接的host（默认: localhost）</li><li><code>port</code>: 连接端口</li><li><code>user</code>: 用户名</li><li><code>password</code>: 密码</li><li><code>database</code>: 数据库名</li><li><code>tablePrefix</code>: 数据表前缀</li><li><code>charset</code>: 编码（默认: UTF8_GENERAL_CI）</li><li><code>timezone</code>: 时区（默认: &#39;local&#39;）</li><li><code>connectTimeout</code>: 连接超时时间（默认: 10000）</li><li><code>connectionLimit</code>: 最大连接数（默认: 10）</li><li><code>logSql</code>: 控制台输出sql（默认: false）</li></ul><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3><h5 id="table-tablename" tabindex="-1"><a class="header-anchor" href="#table-tablename" aria-hidden="true">#</a> table(tableName)</h5><p>设置要查询的表（必需）</p><ul><li><code>tableName</code> String 要查询的表</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="field-field-reverse" tabindex="-1"><a class="header-anchor" href="#field-field-reverse" aria-hidden="true">#</a> field(field, reverse)</h4><p>设置要查询的字段</p><ul><li><code>field</code> String|Array 要查询的字段，可以是字符串，也可以是数组</li><li><code>reverse</code> Boolean 是否反选字段</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT \`id\`, \`title\` FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&#39;id, title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT \`id\`, \`title\` FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT \`author\`, \`date\` FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="limit-offset-length" tabindex="-1"><a class="header-anchor" href="#limit-offset-length" aria-hidden="true">#</a> limit(offset, length)</h4><p>设置查询的数量</p><ul><li><code>offset</code> Number 起始位置</li><li><code>length</code> Number 查询的数目</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` LIMIT 10</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` LIMIT 10, 20</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="page-page-listrows" tabindex="-1"><a class="header-anchor" href="#page-page-listrows" aria-hidden="true">#</a> page(page, listRows)</h4><p>设置当前查询的页数，页数从1开始</p><ul><li><code>page</code> Number 当前的页数</li><li><code>listRows</code> Number 一页记录条数，默认20条</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` LIMIT 0,20</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` LIMIT 10, 20</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="union-union-all" tabindex="-1"><a class="header-anchor" href="#union-union-all" aria-hidden="true">#</a> union(union, all)</h4><p>联合查询</p><ul><li><code>union</code> String 联合查询的字符串</li><li><code>all</code> 是否为UNION ALL模式</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` UNION (SELECT * FROM \`table2\`)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM \`table2\`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` UNION ALL (SELECT * FROM \`table2\`)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM \`table2\`&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` UNION ALL (SELECT * FROM \`table2\`)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">table</span><span class="token operator">:</span> <span class="token string">&#39;table2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` UNION ALL (SELECT * FROM \`table2\`) UNION (SELECT * FROM \`table3\`)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant">UNION</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">table</span><span class="token operator">:</span> <span class="token string">&#39;table2\`}, true).union({table: &#39;</span>table3&#39;<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="join-join" tabindex="-1"><a class="header-anchor" href="#join-join" aria-hidden="true">#</a> join(join)</h4><p>组合查询</p><ul><li><code>join</code> String|Array|Object</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` LEFT JOIN \`table2\` ON table.id = table2.id</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;table2 on table.id = table2.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` LEFT JOIN \`table2\` ON table.id = table2.id RIGHT JOIN \`table3\` ON table.sid = table3.sid</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;table2 ON table.id = table2.id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RIGHT JOIN table3 ON table.sid = table3.sid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` INNER JOIN \`table2\` on table.id = table2.id</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">table</span><span class="token operator">:</span> <span class="token string">&#39;table2&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">join</span><span class="token operator">:</span> <span class="token string">&#39;inner&#39;</span><span class="token punctuation">,</span><span class="token comment">//left, right, inner三种方式</span>
	<span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span> <span class="token comment">//表别名</span>
	<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span> <span class="token comment">//ON 条件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` AS a LEFT JOIN \`table2\` AS b ON a.id = b.id LEFT JOIN \`table3\` AS c ON a.sid = c.sid</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">table</span><span class="token operator">:</span> <span class="token string">&#39;table2&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">join</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
	<span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span>
	<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">table</span><span class="token operator">:</span> <span class="token string">&#39;table3&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">join</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
	<span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;sid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sid&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
<span class="token comment">//SELECT * FROM \`table\` AS a LEFT JOIN \`table2\` AS b ON a.id = b.id LEFT JOIN \`table3\` AS c ON a.sid = c.sid</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">table2</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">join</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
		<span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">table3</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">join</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
		<span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;sid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sid&#39;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
<span class="token comment">//SELECT * FROM \`table\` LEFT JOIN \`table2\` ON table.id = table2.id LEFT JOIN \`table3\` ON (table.sid = table3.sid AND table.name = table3.title);</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">table2</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">table3</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="order-order" tabindex="-1"><a class="header-anchor" href="#order-order" aria-hidden="true">#</a> order(order)</h4><p>设置排序方式</p><ul><li><code>order</code> String|Array|Obeject 排序方式</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` ORDER BY \`id\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
<span class="token comment">//SELECT * FROM \`table\` ORDER BY \`id\` DESC</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string">&#39;id DESC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` ORDER BY \`id\` DESC, \`title\` ASC</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string">&#39;id DESC, title ASC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` ORDER BY \`id\` DESC, \`title\` ASC</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;id DESC&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title ASC&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` ORDER BY \`id\` DESC \`title\` ASC</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;DESC&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;ASC&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="alias-alias" tabindex="-1"><a class="header-anchor" href="#alias-alias" aria-hidden="true">#</a> alias(alias)</h4><p>设置表别名</p><ul><li><code>alias</code> String 表别名</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` AS t</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&#39;t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="having-str" tabindex="-1"><a class="header-anchor" href="#having-str" aria-hidden="true">#</a> having(str)</h4><p>having查询</p><ul><li><code>str</code> String having查询的字符串</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` HAVING \`id\` &gt; 1 AND \`id\` &lt; 100</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">having</span><span class="token punctuation">(</span><span class="token string">&#39;id &gt; 1 AND id &lt; 100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="group-field" tabindex="-1"><a class="header-anchor" href="#group-field" aria-hidden="true">#</a> group(field)</h4><p>分组查询</p><ul><li><code>field</code> String 设定分组查询的字段</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` GROUP BY \`date\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="distinct-field" tabindex="-1"><a class="header-anchor" href="#distinct-field" aria-hidden="true">#</a> distinct(field)</h4><p>去重查询</p><ul><li><code>field</code> String 去重的字段</li><li><code>return</code> this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT DISTINCT \`title\` FROM \`table\`</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="where-where" tabindex="-1"><a class="header-anchor" href="#where-where" aria-hidden="true">#</a> where(where)</h4><p>设置where条件</p><ul><li><code>where</code> Sting|Object 查询条件</li><li><code>return</code> this</li></ul><h5 id="普通条件" tabindex="-1"><a class="header-anchor" href="#普通条件" aria-hidden="true">#</a> 普通条件</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` = 100;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&#39;id = 100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` = 100;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` = 100 OR \`id\` &lt; 2</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&#39;id = 100 OR id &lt; 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` != 100</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;!=&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="exp条件" tabindex="-1"><a class="header-anchor" href="#exp条件" aria-hidden="true">#</a> EXP条件</h5><p>默认会对字段和值进行转义，如果不希望被转义，可是使用EXP的方式</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE \`name\` = &#39;name&#39;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;EXP&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;=&#39;name&#39;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//UPDATE \`table\` SET \`num&#39; = \`num\`+1</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;EXP&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num+1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="like条件" tabindex="-1"><a class="header-anchor" href="#like条件" aria-hidden="true">#</a> LIKE条件</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE (\`title\` NOT LIKE &#39;title&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;NOT LIKE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`title\` LIKE &#39;%title%&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;LIKE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%title%&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//LIKE多个值</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`title\` LIKE &#39;title&#39; OR \`title\` LIKE &#39;name&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;LIKE&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//多个字段LIKE同一个值，OR的关系</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE ((\`title\` LIKE &#39;%title%&#39;) OR (\`content\` LIKE &#39;%title%&#39;))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;title|content&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;LIKE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%title%&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//多个字段LIKE同一个值，AND的关系</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE ((\`title\` LIKE &#39;%title%&#39;) AND (\`content\` LIKE &#39;%title%&#39;))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;title&amp;content&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;LIKE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%title%&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="in条件" tabindex="-1"><a class="header-anchor" href="#in条件" aria-hidden="true">#</a> IN条件</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` IN (1,2,3))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1, 2, 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` IN (1, 2, 3))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` NOT IN (1, 2, 3))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;NOT IN&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="多字段查询" tabindex="-1"><a class="header-anchor" href="#多字段查询" aria-hidden="true">#</a> 多字段查询</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` = 10) AND (\`title\` = &#39;title&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//OR</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` = 10) OR (\`title\` = &#39;title&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">_logic</span><span class="token operator">:</span> <span class="token string">&#39;OR&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//XOR</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` = 10) XOR (\`title\` = &#39;title&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">_logic</span><span class="token operator">:</span> <span class="token string">&#39;XOR&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="between" tabindex="-1"><a class="header-anchor" href="#between" aria-hidden="true">#</a> BETWEEN</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` BETWEEN 1 AND 2)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;BETWEEN&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` BETWEEN 1 AND 2)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;BETWEEN&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1,2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="复合查询" tabindex="-1"><a class="header-anchor" href="#复合查询" aria-hidden="true">#</a> 复合查询</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` &gt; 10 AND \`id\` &lt; 20</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token string-property property">&#39;&gt;&#39;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
	<span class="token string-property property">&#39;&lt;&#39;</span><span class="token operator">:</span> <span class="token number">20</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE \`id\` &lt; 10 OR \`id\` &gt; 20</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token string-property property">&#39;&lt;&#39;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
	<span class="token string-property property">&#39;&gt;&#39;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
	<span class="token literal-property property">_logic</span><span class="token operator">:</span> <span class="token string">&#39;OR&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`id\` &gt; 10 AND \`id\` &lt; 20) OR (\`title\` LIKE &#39;%title%&#39;)</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token string-property property">&#39;&gt;&#39;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
	<span class="token string-property property">&#39;&lt;&#39;</span><span class="token operator">:</span> <span class="token number">20</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;LIKE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%title%&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT * FROM \`table\` WHERE (\`title\` = &#39;title&#39;) AND ((\`id\` IN (1, 2, 3)) OR (\`content\` = &#39;content&#39;))</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">_complex</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">_logic</span><span class="token operator">:</span> <span class="token string">&#39;OR&#39;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="count-field" tabindex="-1"><a class="header-anchor" href="#count-field" aria-hidden="true">#</a> count(field)</h4><p>查询符合条件的数目</p><ul><li><code>field</code> String count的字段</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT COUNT(\`id\`) FROM \`table\` LIMIT 1</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//count为符合条件的数目		</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sum-field" tabindex="-1"><a class="header-anchor" href="#sum-field" aria-hidden="true">#</a> sum(field)</h4><p>求和</p><ul><li><code>field</code> String 要求和的字段</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT SUM(\`num\`) FROM \`table\` LIMIT 1</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">sum</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//sum为求和的值	</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="max-field" tabindex="-1"><a class="header-anchor" href="#max-field" aria-hidden="true">#</a> max(field)</h4><p>求字段的最大值</p><ul><li><code>field</code> String 要求最大值的字段</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT MAX(\`num\`) FROM \`table\` LIMIT 1</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">//max为num的最大值</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="min-field" tabindex="-1"><a class="header-anchor" href="#min-field" aria-hidden="true">#</a> min(field)</h4><p>求字段的最小值</p><ul><li><code>field</code> String 要求最小值的字段</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT MIN(\`num\`) FROM \`table\` LIMIT 1</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">min</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//min为num的最小值	</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="avg-field" tabindex="-1"><a class="header-anchor" href="#avg-field" aria-hidden="true">#</a> avg(field)</h4><p>求字段的平均值</p><ul><li><code>field</code> Sting 要求平均值的字段</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//SELECT AVG(\`num\`) FROM \`table\` LIMIT 1;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">avg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//avg为num的平均值	</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="add-data" tabindex="-1"><a class="header-anchor" href="#add-data" aria-hidden="true">#</a> add(data)</h4><p>插入数据</p><ul><li><code>data</code> Object 要插入的数据</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data  <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;content&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">insertId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//如果插入成功，返回插入的id</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//插入失败，err为具体的错误信息</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="thenadd-data-where-returndetail" tabindex="-1"><a class="header-anchor" href="#thenadd-data-where-returndetail" aria-hidden="true">#</a> thenAdd(data, where, returnDetail)</h4><p>当数据表中不存在where条件对应的数据时才进行插入</p><ul><li><code>data</code> Object 要插入的数据</li><li><code>where</code> String|Array|Object 检测的条件</li><li><code>returnDetail</code> Boolean 是否返回详细的信息</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//假设字段title为UNIQUE</span>
<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;content&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> where <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span>
<span class="token punctuation">}</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenAdd</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回已经存在或者刚插入的id</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>		
<span class="token comment">//返回详细信息</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenAdd</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> where<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">/*
	data数据结构为
	{
		type: &#39;exist&#39; || &#39;add&#39;,  //exist表示已存在，add新增
		id: 1
	}
	*/</span>	
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="addall-data" tabindex="-1"><a class="header-anchor" href="#addall-data" aria-hidden="true">#</a> addAll(data)</h4><p>一次添加多条数据</p><ul><li><code>data</code> Array</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;yyy&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">insertId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//插入成功</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//插入失败</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete()</h4><p>删除数据</p><ul><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//删除所有数据</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">affectRows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回影响行数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>		
<span class="token comment">//删除符合条件的数据</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">functino</span> <span class="token punctuation">(</span><span class="token parameter">affectRows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回影响的行数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="update-data" tabindex="-1"><a class="header-anchor" href="#update-data" aria-hidden="true">#</a> update(data)</h4><p>更新数据，需要条件</p><ul><li><code>data</code> Object 要更新的数据</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">affectRows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回影响行数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select()</h4><p>查询符合条件的数据</p><ul><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回结果 Array</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> find()</h4><p>查找一条符合条件的数据</p><ul><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//返回结果 Object</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="updateinc-field-step" tabindex="-1"><a class="header-anchor" href="#updateinc-field-step" aria-hidden="true">#</a> updateInc(field, step)</h4><p>字段值增加</p><ul><li><code>field</code> String 要增加的字段</li><li><code>step</code> Number 增加的数值，默认为1</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//将id为1的num字段加10</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateInc</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="updatedec-field-step" tabindex="-1"><a class="header-anchor" href="#updatedec-field-step" aria-hidden="true">#</a> updateDec(field, step)</h4><p>字段值减少</p><ul><li><code>field</code> String 要减少的字段</li><li><code>step</code> Number 减少的数字，默认为1</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//将id为1的num字段值减10</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateDec</span><span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getfield-field-onlyone" tabindex="-1"><a class="header-anchor" href="#getfield-field-onlyone" aria-hidden="true">#</a> getField(field, onlyOne)</h4><p>获取某个字段的值</p><ul><li><code>field</code> String 要获取的字段，可以是多个字段（用,隔开）</li><li><code>onlyOne</code> Boolean|Array 是否只需要一个值，或者是需要几个值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//取id&gt;100的id集合</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//data为Array，是符合结果的所有集合</span>
	<span class="token comment">//data = [101, 102, 103, 104]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>		
<span class="token comment">//只需要id&gt;100的一个值</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;&gt;&#39;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//data为数字，符合条件的第一个值</span>
	<span class="token comment">//data = 101</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//只需要id&gt;100的3个值</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;&gt;&#39;</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//data为Array</span>
	<span class="token comment">//data = [101, 102, 103]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//需要id和title两个字段的值</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&#39;id, title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//data为对象</span>
	<span class="token comment">/*
	data = {
		id: [101, 102, 103, 104],
		title: [&#39;aaaa&#39;, &#39;bbbb&#39;, &#39;cccc&#39;, &#39;dddd&#39;]
	}
	*/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="countselect-options-flag" tabindex="-1"><a class="header-anchor" href="#countselect-options-flag" aria-hidden="true">#</a> countSelect(options, flag)</h4><ul><li><code>options</code> 查询参数</li><li><code>flag</code> Boolean 当分页值不合法的时候，处理情况。true为修正到第一页，false为修正到最后一页，默认不进行修正</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//查询1-20条数据</span>
mysql<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">countSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//data数据格式</span>
	data <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token comment">//总条数</span>
		<span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">7</span>    <span class="token comment">//总页数</span>
		<span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">1</span>     <span class="token comment">//当前页</span>
		<span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">20</span>     <span class="token comment">//每页显示数量</span>
		data： <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token comment">//详细数据</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="query-sql-parse" tabindex="-1"><a class="header-anchor" href="#query-sql-parse" aria-hidden="true">#</a> query(sql, parse)</h4><p>自定义sql语句进行查询</p><ul><li><code>sql</code> String 要执行的sql语句</li><li><code>parse</code> 格式参数的数据</li><li><code>return</code> promise</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>
	<span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span>
	<span class="token string">&#39;id &gt; 100&#39;</span>
<span class="token punctuation">]</span>	
mysql<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT %s FROM %s WHERE %s&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="execute-sql-parse" tabindex="-1"><a class="header-anchor" href="#execute-sql-parse" aria-hidden="true">#</a> execute(sql, parse)</h4><p>自定义sql语句执行，使用与query相同，返回数据不同，execute返回影响行数</p><h4 id="close" tabindex="-1"><a class="header-anchor" href="#close" aria-hidden="true">#</a> close()</h4><p>关闭连接池连接，非特殊情况，不建议使用</p>`,143),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","04.html.vue"]]);export{r as default};
